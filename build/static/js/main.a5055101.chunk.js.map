{"version":3,"sources":["AuthProvider.js","PrivateRoute.js","ChatBubble.js","firebase.js","Chat.js","HomePage.js","LoginPage.js","components/clubdetail/ClubDetail.js","components/eventdetail/EventDetail.js","components/navbar/Navbar.js","AdminPage.js","components/mypage/MyPage.js","components/announcement/Announcement.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","currentUser","setCurrentUser","_useState5","_useState6","isAdmin","setIsAdmin","db","firebase","firestore","useEffect","auth","onAuthStateChanged","user","emailHandle","email","split","collection","doc","onSnapshot","userDoc","data","isSuperUser","querySnapshot","forEach","clubDoc","user_role","React","createElement","Provider","value","PrivateRoute","_useContext","useContext","navigate","useNavigate","location","useLocation","pathname","replace","state","from","ChatBubble","onClick","isVisible","setIsVisible","width","height","viewBox","fill","xmlns","clip-path","id","maskUnits","x","y","fill-rule","clip-rule","d","mask","transform","rx","style","position","top","right","cursor","IoIosClose","size","color","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Chat","showChat","setShowChat","message","setMessage","setUser","_useState7","_useState8","messages","setMessages","_useState9","_useState10","userMessageCount","setUserMessageCount","_useState11","_useState12","userMessagesJSON","setUserMessagesJSON","_useState13","_useState14","refreshChat","setRefreshChat","messagesEndRef","useRef","unsubscribe","text","current","scrollIntoView","behavior","toggleChat","submitMessage","_asyncToGenerator","_callee","e","systemMessages","_context","preventDefault","concat","_toConsumableArray","_objectSpread","_defineProperty","toString","console","log","_x","apply","arguments","_ref2","_callee2","response","chatGPTMessage","_context2","fetch","headers","Content-Type","body","JSON","stringify","json","prevMessages","t0","fetchMessages","isInputDisabled","className","src","FaSyncAlt","padding","flex","overflowY","map","display","justifyContent","margin","borderRadius","backgroundColor","textAlign","maxWidth","wordWrap","whiteSpace","ref","onSubmit","onChange","target","disabled","HomePage","clubDataList","setClubDataList","searchTerm","setSearchTerm","filteredClubData","setFilteredClubData","categories","setCategories","selectedCategory","setSelectedCategory","announcements","setAnnouncements","clubInfoRef","categoryRef","get","docs","categorydoc","exists","lowerSearchTerm","toLowerCase","lowerSelectedCategory","filteredData","filter","club","lowerClubName","club_name","lowerCategory","category","lowerMeetingTime","meeting_date","includes","announcement","index","Link","to","announcement_name","str","announcement_description","substring","placeholder","event","hidden","hash_tag","tag","tagIndex","trim","club_logo","alt","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","test","_unsupportedIterableToArray","F","s","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","LoginPage","errorMsg","setErrorMsg","handleIsAdmin","email_handle","userDocSnapshot","joinClubCollectionSnapshot","_iterator","_step","empty","_x2","signInWithGoogle","userDocRef","isAdminStatus","_ref3","signInWithPopup","GoogleAuthProvider","lastIndexOf","signOut","set","ClubDetail","useParams","clubData","setClubData","clubEvents","setClubEvents","handleJoin","joinClubCollectionRef","clubDocRef","club_leader","alert","eventsCollection","allEvents","eventDoc","eventData","fetchClubEvents","Instagram","social_media_links","sns_links","hashTags","href","role","rel","sponsor","description","mission","past_activities","meeting_frequency","event_name","start_date","event_Description","EventDetail","_useParams","isLoading","setIsLoading","clubDataSnapshot","fetchClubData","fetchClubEvent","startDate","eventDescription","event_description","applyLink","apply_link","contact_link","absoluteURL","URL","window","origin","open","Navbar","textDecoration","AdminPage","selectedClub","setSelectedClub","clubs","setClubs","clubInfo","setClubInfo","isClubModalOpen","setClubModalOpen","selectedEvent","setSelectedEvent","eventInfo","setEventInfo","events","setEvents","_useState15","_useState16","isEventModalOpen","setEventModalOpen","_useState17","_useState18","selectedAnnouncement","setSelectedAnnouncement","_useState19","_useState20","_useState21","_useState22","announcementInfo","setAnnouncementInfo","_useState23","_useState24","isAnnouncementModalOpen","setAnnouncementModalOpen","_useState25","_useState26","showUpdateButton","setShowUpdateButton","_useState27","_useState28","selectedHashTags","setSelectedHashTags","_useState29","_useState30","setIsSuperUser","_useState31","_useState32","requests","setRequests","_useState33","_useState34","setIsRequestApproved","_useState35","_useState36","approvedRequests","setApprovedRequests","_useState37","members","additional_info","_useState38","newClubInfo","setNewClubInfo","_useState39","end_date","manager_name","_useState40","newAnnouncement","setNewAnnouncement","hashTagOptions","handleModalInputChange","_event$target","currentHashTags","checked","join","handleModalCreateClub","_useState41","_useState42","newEventInfo","setNewEventInfo","handleEventModalInputChange","handleEventModalCreateEvent","docRef","eventInfoKeysOrder","eventKeyDisplayNames","clubInfoKeysOrder","keyDisplayNames","clubsArray","where","eventsArray","toDate","toISOString","_callee3","announcementsArray","_context3","fetchAnnouncements","_ref4","_callee4","requestList","_context4","parent","clubName","confirmFlag","confirm_flag","confirmedTimestamp","confirmed_timestamp","currentRole","current_role","requestClubLeader","request_club_leader","requestRole","request_role","requestTimestamp","request_timestamp","getRequests","handleInputChange","handleHashTagChange","handleEventInputChange","handleAnnouncementModalInputChange","handleCreateAnnouncement","_ref5","_callee5","_context5","add","updateAnnouncementInfo","_ref6","_callee6","_context6","update","handleAnnouncementInputChange","_event$target2","prevState","handleApproveRequest","_ref7","_callee7","request","_context7","Date","fetchRequests","_ref8","_callee8","_context8","setInputWidth","input","document","getElementById","alignItems","marginRight","ReactModal","isOpen","onRequestClose","option","required","onFocus","idx","find","announcementId","class","MyPage","selectedAuth","setSelectedAuth","clubDetails","setClubDetails","handleCreateRequest","requestData","userRequestDocRef","requestInfoDocRef","userRequestDoc","requestInfoDoc","runTransaction","transaction","joinedClubIds","fetchJoinedClubs","fetchClubDetails","clubInfoCollection","clubDetailsArray","clubId","t1","_iterator2","_step2","photoURL","selected","Announcement","announcementData","setAnnouncementData","announcementsCollection","snapshot","announcementsData","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a5055101.chunk.js","sourcesContent":["import React, { useEffect, useState, createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n//import { firebase, auth } from \"./firebase\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n      if (user) {\n        const emailHandle = user.email.split('@')[0];\n        db.collection('Users').doc(emailHandle)\n          .onSnapshot((doc) => {\n            const userDoc = doc.data();\n            // check isSuperUser field\n            if (userDoc && userDoc.isSuperUser) {\n              setIsAdmin(true);\n            } else {\n              // check JoinClub collection\n              db.collection('Users').doc(emailHandle).collection('JoinClub')\n                .onSnapshot((querySnapshot) => {\n                  querySnapshot.forEach((doc) => {\n                    const clubDoc = doc.data();\n                    if (clubDoc.user_role === '1' || clubDoc.user_role === '2') {\n                      setIsAdmin(true);\n                    }\n                  });\n                });\n            }\n          });\n      } else {\n        setIsAdmin(false);\n      }\n    });\n  }, [db]);\n  const signOut = () => {\n    firebase.auth().signOut().then(() => {\n      setCurrentUser(null); // Reset currentUser to null on sign out\n    });\n  };\n\n  if(loading){\n\t  return null;\n  }\n\n  return (\n    <AuthContext.Provider value={{ currentUser, setCurrentUser, isAdmin, setIsAdmin }}>  {/* isAdmin과 setIsAdmin 제공 */}\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","// PrivateRoute.js\nimport React, { useContext, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { AuthContext } from './AuthProvider';\n\nconst PrivateRoute = ({ children }) => {\n  const { currentUser, isAdmin } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!currentUser || (location.pathname === '/admin' && !isAdmin)) {\n      // 로그인하지 않은 사용자 또는 관리자가 아닌 사용자가 보호된 경로에 접근하려고 하면 로그인 페이지로 이동\n      navigate('/login', { replace: true, state: { from: location } });\n    }\n  }, [currentUser, isAdmin, navigate, location]);\n\n  return currentUser ? children : null;\n};\n\nexport default PrivateRoute;\n","import React, { useState } from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\n\nconst ChatBubble = ({ onClick }) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const hideChatBubble = () => {\n    setIsVisible(false);\n  };\n\n  return (\n    <div>\n      {isVisible && (\n        <div onClick={onClick}>\n          <svg width=\"315\" height=\"126\" viewBox=\"0 0 315 126\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clip-path=\"url(#clip0_63_2021)\">\n              <mask id=\"path-1-outside-1_63_2021\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"315\" height=\"126\" fill=\"black\">\n                <rect fill=\"white\" width=\"315\" height=\"126\" />\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 1C2.79086 1 1 2.79086 1 5V109C1 111.209 2.79086 113 4.99999 113H263.485L274.691 124.037L285.897 113H310C312.209 113 314 111.209 314 109V5C314 2.79086 312.209 1 310 1H5Z\" />\n              </mask>\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 1C2.79086 1 1 2.79086 1 5V109C1 111.209 2.79086 113 4.99999 113H263.485L274.691 124.037L285.897 113H310C312.209 113 314 111.209 314 109V5C314 2.79086 312.209 1 310 1H5Z\" fill=\"white\" />\n              <path d=\"M263.485 113L264.187 112.288L263.895 112H263.485V113ZM274.691 124.037L273.989 124.749L274.691 125.44L275.393 124.749L274.691 124.037ZM285.897 113V112H285.487L285.195 112.288L285.897 113ZM2 5C2 3.34314 3.34315 2 5 2V0C2.23858 0 0 2.23857 0 5H2ZM2 109V5H0V109H2ZM4.99999 112C3.34314 112 2 110.657 2 109H0C0 111.761 2.23857 114 4.99999 114V112ZM263.485 112H4.99999V114H263.485V112ZM275.393 123.324L264.187 112.288L262.783 113.712L273.989 124.749L275.393 123.324ZM285.195 112.288L273.989 123.324L275.393 124.749L286.598 113.712L285.195 112.288ZM310 112H285.897V114H310V112ZM313 109C313 110.657 311.657 112 310 112V114C312.761 114 315 111.761 315 109H313ZM313 5V109H315V5H313ZM310 2C311.657 2 313 3.34315 313 5H315C315 2.23858 312.761 0 310 0V2ZM5 2H310V0H5V2Z\" fill=\"#EAEAEA\" mask=\"url(#path-1-outside-1_63_2021)\" />\n              <g clip-path=\"url(#clip1_63_2021)\">\n                <rect width=\"313\" height=\"37\" transform=\"translate(1 1)\" fill=\"#A0192A\" />\n                <path d=\"M20.504 26C20.2053 26 19.9707 25.92 19.8 25.76C19.6293 25.5893 19.512 25.3227 19.448 24.96L17.544 14.8H18.712L20.456 24.464H20.472L23.288 15.392H23.784C23.976 15.392 24.1307 15.4507 24.248 15.568C24.3653 15.6747 24.4613 15.8453 24.536 16.08L27.032 24.464H27.048L28.792 14.8H29.96L28.056 24.96C27.992 25.3227 27.8747 25.5893 27.704 25.76C27.5333 25.92 27.2987 26 27 26H26.52L23.8 16.976H23.784L20.984 26H20.504ZM33.7939 26.128C32.8979 26.128 32.1779 25.8667 31.6339 25.344C31.0899 24.8107 30.8179 24.1067 30.8179 23.232V20.944C30.8179 20.0267 31.0899 19.2907 31.6339 18.736C32.1779 18.1707 32.8979 17.888 33.7939 17.888H35.1059C35.9592 17.888 36.6472 18.16 37.1699 18.704C37.6925 19.248 37.9539 19.968 37.9539 20.864V22.272H31.9699V23.232C31.9699 23.7867 32.1352 24.24 32.4659 24.592C32.8072 24.9333 33.2499 25.104 33.7939 25.104H35.0099C35.5432 25.104 35.9752 24.96 36.3059 24.672C36.6365 24.3733 36.8019 23.9787 36.8019 23.488H37.9219C37.9219 24.2773 37.6552 24.9173 37.1219 25.408C36.5885 25.888 35.8845 26.128 35.0099 26.128H33.7939ZM36.8019 21.28V20.864C36.8019 20.2773 36.6472 19.808 36.3379 19.456C36.0285 19.0933 35.6179 18.912 35.1059 18.912H33.7939C33.2499 18.912 32.8072 19.0987 32.4659 19.472C32.1352 19.8453 31.9699 20.336 31.9699 20.944V21.28H36.8019ZM42.174 26C41.3847 26 40.8193 25.8347 40.478 25.504C40.1367 25.1627 39.966 24.6027 39.966 23.824V14.8H41.118V23.824C41.118 24.2293 41.198 24.5227 41.358 24.704C41.5287 24.8853 41.8007 24.976 42.174 24.976H42.718V26H42.174ZM46.8393 26.128C45.9646 26.128 45.2606 25.8667 44.7273 25.344C44.1939 24.8107 43.9273 24.1067 43.9273 23.232V20.944C43.9273 20.0267 44.1939 19.2907 44.7273 18.736C45.2606 18.1707 45.9593 17.888 46.8233 17.888H48.1353C48.9566 17.888 49.6179 18.1173 50.1193 18.576C50.6206 19.0347 50.8713 19.6373 50.8713 20.384H49.7513C49.7513 19.9467 49.6019 19.5947 49.3033 19.328C49.0153 19.0507 48.6259 18.912 48.1353 18.912H46.8233C46.3006 18.912 45.8793 19.0987 45.5593 19.472C45.2393 19.8453 45.0793 20.336 45.0793 20.944V23.232C45.0793 23.7973 45.2393 24.2507 45.5593 24.592C45.8899 24.9333 46.3166 25.104 46.8393 25.104H48.1513C48.6526 25.104 49.0526 24.928 49.3513 24.576C49.6606 24.224 49.8153 23.7547 49.8153 23.168H50.9353C50.9353 24.0533 50.6793 24.768 50.1673 25.312C49.6553 25.856 48.9833 26.128 48.1513 26.128H46.8393ZM55.4814 26.128C54.5854 26.128 53.8654 25.8507 53.3214 25.296C52.7774 24.7413 52.5054 24.0107 52.5054 23.104V20.912C52.5054 20.0053 52.7774 19.2747 53.3214 18.72C53.876 18.1653 54.6067 17.888 55.5134 17.888H56.8254C57.732 17.888 58.4574 18.1653 59.0014 18.72C59.556 19.2747 59.8334 20.0053 59.8334 20.912V23.104C59.8334 24.0107 59.556 24.7413 59.0014 25.296C58.4467 25.8507 57.7107 26.128 56.7934 26.128H55.4814ZM56.7934 25.104C57.3694 25.104 57.828 24.9227 58.1694 24.56C58.5107 24.1867 58.6814 23.7013 58.6814 23.104V20.912C58.6814 20.3147 58.5107 19.8347 58.1694 19.472C57.828 19.0987 57.38 18.912 56.8254 18.912H55.5134C54.9587 18.912 54.5107 19.0987 54.1694 19.472C53.828 19.8347 53.6574 20.3147 53.6574 20.912V23.104C53.6574 23.712 53.8227 24.1973 54.1534 24.56C54.484 24.9227 54.9267 25.104 55.4814 25.104H56.7934ZM70.7024 17.888C71.4064 17.888 71.961 18.1173 72.3664 18.576C72.7824 19.024 72.9904 19.648 72.9904 20.448V26H71.8384V20.416C71.8384 19.9467 71.7317 19.5787 71.5184 19.312C71.305 19.0453 71.0224 18.912 70.6704 18.912H69.7584C69.2997 18.912 68.921 19.0667 68.6224 19.376C68.3237 19.6853 68.1317 20.1227 68.0464 20.688V26H66.8944V20.512C66.8944 20.0107 66.793 19.6213 66.5904 19.344C66.3984 19.056 66.1317 18.912 65.7904 18.912H64.8784C64.441 18.912 64.057 19.104 63.7264 19.488C63.3957 19.872 63.1877 20.3733 63.1024 20.992V26H61.9504V18.016H63.0704V19.168C63.2837 18.7627 63.5504 18.448 63.8704 18.224C64.1904 18 64.5264 17.888 64.8784 17.888H65.8224C66.2704 17.888 66.6544 18 66.9744 18.224C67.305 18.4373 67.5557 18.752 67.7264 19.168C67.9717 18.7413 68.265 18.4213 68.6064 18.208C68.9477 17.9947 69.321 17.888 69.7264 17.888H70.7024ZM77.9814 26.128C77.0854 26.128 76.3654 25.8667 75.8214 25.344C75.2774 24.8107 75.0054 24.1067 75.0054 23.232V20.944C75.0054 20.0267 75.2774 19.2907 75.8214 18.736C76.3654 18.1707 77.0854 17.888 77.9814 17.888H79.2934C80.1467 17.888 80.8347 18.16 81.3574 18.704C81.88 19.248 82.1414 19.968 82.1414 20.864V22.272H76.1574V23.232C76.1574 23.7867 76.3227 24.24 76.6534 24.592C76.9947 24.9333 77.4374 25.104 77.9814 25.104H79.1974C79.7307 25.104 80.1627 24.96 80.4934 24.672C80.824 24.3733 80.9894 23.9787 80.9894 23.488H82.1094C82.1094 24.2773 81.8427 24.9173 81.3094 25.408C80.776 25.888 80.072 26.128 79.1974 26.128H77.9814ZM80.9894 21.28V20.864C80.9894 20.2773 80.8347 19.808 80.5254 19.456C80.216 19.0933 79.8054 18.912 79.2934 18.912H77.9814C77.4374 18.912 76.9947 19.0987 76.6534 19.472C76.3227 19.8453 76.1574 20.336 76.1574 20.944V21.28H80.9894ZM91.4458 26C90.6031 26 89.9951 25.8187 89.6218 25.456C89.2591 25.0933 89.0778 24.496 89.0778 23.664V19.04H87.6698V18.016H89.0778V15.6H90.2298V18.016H92.3098V19.04H90.2298V23.664C90.2298 24.1333 90.3204 24.4693 90.5018 24.672C90.6938 24.8747 91.0084 24.976 91.4458 24.976H92.3098V26H91.4458ZM96.8251 26.128C95.9291 26.128 95.2091 25.8507 94.6651 25.296C94.1211 24.7413 93.8491 24.0107 93.8491 23.104V20.912C93.8491 20.0053 94.1211 19.2747 94.6651 18.72C95.2198 18.1653 95.9505 17.888 96.8571 17.888H98.1691C99.0758 17.888 99.8011 18.1653 100.345 18.72C100.9 19.2747 101.177 20.0053 101.177 20.912V23.104C101.177 24.0107 100.9 24.7413 100.345 25.296C99.7905 25.8507 99.0545 26.128 98.1371 26.128H96.8251ZM98.1371 25.104C98.7131 25.104 99.1718 24.9227 99.5131 24.56C99.8545 24.1867 100.025 23.7013 100.025 23.104V20.912C100.025 20.3147 99.8545 19.8347 99.5131 19.472C99.1718 19.0987 98.7238 18.912 98.1691 18.912H96.8571C96.3025 18.912 95.8545 19.0987 95.5131 19.472C95.1718 19.8347 95.0011 20.3147 95.0011 20.912V23.104C95.0011 23.712 95.1665 24.1973 95.4971 24.56C95.8278 24.9227 96.2705 25.104 96.8251 25.104H98.1371ZM110.378 26.128C109.738 26.128 109.173 25.9947 108.682 25.728C108.192 25.4507 107.808 25.0667 107.53 24.576C107.264 24.0747 107.13 23.4987 107.13 22.848H108.282C108.282 23.5093 108.474 24.048 108.858 24.464C109.253 24.8693 109.77 25.072 110.41 25.072H112.186C112.816 25.072 113.322 24.9333 113.706 24.656C114.09 24.368 114.282 23.9947 114.282 23.536V22.512C114.282 22.1493 114.138 21.84 113.85 21.584C113.573 21.328 113.189 21.1627 112.698 21.088L109.818 20.608C109.008 20.4693 108.378 20.1813 107.93 19.744C107.482 19.3067 107.258 18.7573 107.258 18.096V17.232C107.258 16.4533 107.546 15.8347 108.122 15.376C108.709 14.9067 109.482 14.672 110.442 14.672H112.25C113.157 14.672 113.888 14.9493 114.442 15.504C114.997 16.048 115.274 16.768 115.274 17.664H114.122C114.122 17.0773 113.952 16.608 113.61 16.256C113.269 15.904 112.816 15.728 112.25 15.728H110.442C109.834 15.728 109.349 15.8667 108.986 16.144C108.624 16.4107 108.442 16.7733 108.442 17.232V18.096C108.442 18.4693 108.576 18.784 108.842 19.04C109.12 19.296 109.498 19.4667 109.978 19.552L112.842 20.048C113.674 20.1973 114.32 20.4853 114.778 20.912C115.237 21.328 115.466 21.8613 115.466 22.512V23.536C115.466 24.3147 115.168 24.944 114.57 25.424C113.973 25.8933 113.189 26.128 112.218 26.128H110.378ZM123.616 22.896H118.704L117.552 26H116.336L120.64 14.8H121.184C121.536 14.8 121.792 15.0133 121.952 15.44L124.416 21.904H124.432V21.936L125.984 26H124.768L123.616 22.896ZM119.072 21.904H123.248L121.168 16.336H121.152L119.072 21.904ZM130.207 26.128C129.567 26.128 129.001 25.9947 128.511 25.728C128.02 25.4507 127.636 25.0667 127.359 24.576C127.092 24.0747 126.959 23.4987 126.959 22.848H128.111C128.111 23.5093 128.303 24.048 128.687 24.464C129.081 24.8693 129.599 25.072 130.239 25.072H132.015C132.644 25.072 133.151 24.9333 133.535 24.656C133.919 24.368 134.111 23.9947 134.111 23.536V22.512C134.111 22.1493 133.967 21.84 133.679 21.584C133.401 21.328 133.017 21.1627 132.527 21.088L129.647 20.608C128.836 20.4693 128.207 20.1813 127.759 19.744C127.311 19.3067 127.087 18.7573 127.087 18.096V17.232C127.087 16.4533 127.375 15.8347 127.951 15.376C128.537 14.9067 129.311 14.672 130.271 14.672H132.079C132.985 14.672 133.716 14.9493 134.271 15.504C134.825 16.048 135.102 16.768 135.102 17.664H133.951C133.951 17.0773 133.78 16.608 133.439 16.256C133.097 15.904 132.644 15.728 132.079 15.728H130.271C129.663 15.728 129.177 15.8667 128.815 16.144C128.452 16.4107 128.271 16.7733 128.271 17.232V18.096C128.271 18.4693 128.404 18.784 128.671 19.04C128.948 19.296 129.327 19.4667 129.807 19.552L132.671 20.048C133.503 20.1973 134.148 20.4853 134.607 20.912C135.065 21.328 135.295 21.8613 135.295 22.512V23.536C135.295 24.3147 134.996 24.944 134.399 25.424C133.801 25.8933 133.017 26.128 132.047 26.128H130.207ZM144.874 26.128C144.138 26.128 143.493 25.9627 142.938 25.632C142.394 25.2907 141.967 24.8107 141.658 24.192C141.359 23.5733 141.21 22.864 141.21 22.064V18.736C141.21 17.936 141.365 17.232 141.674 16.624C141.994 16.0053 142.437 15.5253 143.002 15.184C143.567 14.8427 144.218 14.672 144.954 14.672H146.65C147.354 14.672 147.973 14.8213 148.506 15.12C149.05 15.4187 149.471 15.84 149.77 16.384C150.069 16.928 150.218 17.552 150.218 18.256H149.066C149.066 17.4987 148.842 16.8907 148.394 16.432C147.957 15.9627 147.375 15.728 146.65 15.728H144.954C144.186 15.728 143.567 16.0053 143.098 16.56C142.629 17.104 142.394 17.8293 142.394 18.736V22.064C142.394 22.9707 142.618 23.7013 143.066 24.256C143.525 24.8 144.127 25.072 144.874 25.072H146.602C147.359 25.072 147.973 24.8107 148.442 24.288C148.911 23.7653 149.146 23.0773 149.146 22.224V21.264H146.042V20.224H150.298V22.224C150.298 22.992 150.143 23.6747 149.834 24.272C149.535 24.8587 149.103 25.3173 148.538 25.648C147.983 25.968 147.338 26.128 146.602 26.128H144.874ZM155.06 26.128C154.164 26.128 153.444 25.8667 152.9 25.344C152.356 24.8107 152.084 24.1067 152.084 23.232V20.944C152.084 20.0267 152.356 19.2907 152.9 18.736C153.444 18.1707 154.164 17.888 155.06 17.888H156.372C157.225 17.888 157.913 18.16 158.436 18.704C158.958 19.248 159.22 19.968 159.22 20.864V22.272H153.236V23.232C153.236 23.7867 153.401 24.24 153.732 24.592C154.073 24.9333 154.516 25.104 155.06 25.104H156.276C156.809 25.104 157.241 24.96 157.572 24.672C157.902 24.3733 158.068 23.9787 158.068 23.488H159.188C159.188 24.2773 158.921 24.9173 158.388 25.408C157.854 25.888 157.15 26.128 156.276 26.128H155.06ZM158.068 21.28V20.864C158.068 20.2773 157.913 19.808 157.604 19.456C157.294 19.0933 156.884 18.912 156.372 18.912H155.06C154.516 18.912 154.073 19.0987 153.732 19.472C153.401 19.8453 153.236 20.336 153.236 20.944V21.28H158.068ZM161.232 18.016H162.352V19.2C162.597 18.816 162.917 18.5013 163.312 18.256C163.706 18.0107 164.101 17.888 164.496 17.888H165.584C166.32 17.888 166.912 18.1387 167.36 18.64C167.818 19.1413 168.048 19.7973 168.048 20.608V26H166.896V20.576C166.896 20.0853 166.773 19.6853 166.528 19.376C166.282 19.0667 165.957 18.912 165.552 18.912H164.528C164.026 18.912 163.568 19.1093 163.152 19.504C162.746 19.8987 162.49 20.4053 162.384 21.024V26H161.232V18.016ZM173.044 26.128C172.148 26.128 171.428 25.8667 170.884 25.344C170.34 24.8107 170.068 24.1067 170.068 23.232V20.944C170.068 20.0267 170.34 19.2907 170.884 18.736C171.428 18.1707 172.148 17.888 173.044 17.888H174.356C175.209 17.888 175.897 18.16 176.42 18.704C176.943 19.248 177.204 19.968 177.204 20.864V22.272H171.22V23.232C171.22 23.7867 171.385 24.24 171.716 24.592C172.057 24.9333 172.5 25.104 173.044 25.104H174.26C174.793 25.104 175.225 24.96 175.556 24.672C175.887 24.3733 176.052 23.9787 176.052 23.488H177.172C177.172 24.2773 176.905 24.9173 176.372 25.408C175.839 25.888 175.135 26.128 174.26 26.128H173.044ZM176.052 21.28V20.864C176.052 20.2773 175.897 19.808 175.588 19.456C175.279 19.0933 174.868 18.912 174.356 18.912H173.044C172.5 18.912 172.057 19.0987 171.716 19.472C171.385 19.8453 171.22 20.336 171.22 20.944V21.28H176.052ZM179.216 18.016H180.336V19.248C180.549 18.8747 180.869 18.5707 181.296 18.336C181.733 18.1013 182.187 17.984 182.656 17.984H183.36V19.024H182.656C181.973 19.024 181.419 19.2427 180.992 19.68C180.576 20.1067 180.368 20.6773 180.368 21.392V26H179.216V18.016ZM186.958 26.128C186.179 26.128 185.555 25.9253 185.086 25.52C184.627 25.1147 184.398 24.5707 184.398 23.888V23.376C184.398 22.704 184.638 22.1653 185.118 21.76C185.598 21.3547 186.232 21.152 187.022 21.152H188.046C188.398 21.152 188.76 21.2053 189.134 21.312C189.507 21.4187 189.827 21.5627 190.094 21.744V20.416C190.094 19.968 189.955 19.6053 189.678 19.328C189.4 19.04 189.032 18.896 188.574 18.896H187.294C186.835 18.896 186.467 19.0027 186.19 19.216C185.912 19.4293 185.774 19.712 185.774 20.064H184.622C184.622 19.4133 184.867 18.8907 185.358 18.496C185.848 18.0907 186.494 17.888 187.294 17.888H188.574C189.363 17.888 189.998 18.1227 190.478 18.592C190.968 19.0507 191.214 19.6587 191.214 20.416V26H190.126V24.88C189.88 25.264 189.555 25.568 189.15 25.792C188.755 26.016 188.344 26.128 187.918 26.128H186.958ZM187.95 25.12C188.451 25.12 188.899 24.9653 189.294 24.656C189.688 24.3467 189.955 23.936 190.094 23.424V22.832C189.88 22.6293 189.582 22.4693 189.198 22.352C188.824 22.224 188.44 22.16 188.046 22.16H187.022C186.584 22.16 186.227 22.272 185.95 22.496C185.683 22.72 185.549 23.0133 185.549 23.376V23.888C185.549 24.2613 185.678 24.56 185.934 24.784C186.19 25.008 186.531 25.12 186.958 25.12H187.95ZM195.752 26C194.963 26 194.397 25.8347 194.056 25.504C193.715 25.1627 193.544 24.6027 193.544 23.824V14.8H194.696V23.824C194.696 24.2293 194.776 24.5227 194.936 24.704C195.107 24.8853 195.379 24.976 195.752 24.976H196.296V26H195.752ZM205.358 26.128C204.643 26.128 204.008 25.9573 203.454 25.616C202.91 25.2747 202.483 24.8 202.174 24.192C201.875 23.5733 201.726 22.864 201.726 22.064V18.736C201.726 17.936 201.875 17.2267 202.174 16.608C202.483 15.9893 202.915 15.5147 203.47 15.184C204.035 14.8427 204.686 14.672 205.422 14.672H207.118C207.811 14.672 208.419 14.8213 208.942 15.12C209.475 15.4187 209.886 15.84 210.174 16.384C210.472 16.928 210.622 17.552 210.622 18.256H209.47C209.47 17.4987 209.251 16.8907 208.814 16.432C208.387 15.9627 207.822 15.728 207.118 15.728H205.422C204.664 15.728 204.056 16.0053 203.598 16.56C203.139 17.104 202.91 17.8293 202.91 18.736V22.064C202.91 22.9707 203.134 23.7013 203.582 24.256C204.03 24.8 204.622 25.072 205.358 25.072H207.086C207.811 25.072 208.392 24.816 208.83 24.304C209.278 23.792 209.502 23.12 209.502 22.288H210.654C210.654 23.0453 210.504 23.7173 210.206 24.304C209.907 24.88 209.486 25.328 208.942 25.648C208.408 25.968 207.79 26.128 207.086 26.128H205.358ZM214.752 26C213.963 26 213.397 25.8347 213.056 25.504C212.715 25.1627 212.544 24.6027 212.544 23.824V14.8H213.696V23.824C213.696 24.2293 213.776 24.5227 213.936 24.704C214.107 24.8853 214.379 24.976 214.752 24.976H215.296V26H214.752ZM219.209 26.128C218.473 26.128 217.876 25.8773 217.417 25.376C216.959 24.8747 216.729 24.2187 216.729 23.408V18.016H217.881V23.44C217.881 23.9413 218.004 24.3467 218.249 24.656C218.495 24.9547 218.815 25.104 219.209 25.104H220.201C220.692 25.104 221.145 24.9067 221.561 24.512C221.977 24.1173 222.244 23.6213 222.361 23.024V18.016H223.513V26H222.393V24.784C222.148 25.168 221.823 25.488 221.417 25.744C221.012 26 220.617 26.128 220.233 26.128H219.209ZM229.102 26.128C228.75 26.128 228.377 26.0213 227.982 25.808C227.588 25.584 227.284 25.3067 227.07 24.976V26H225.95V14.8H227.102V18.96C227.337 18.6293 227.636 18.368 227.998 18.176C228.372 17.984 228.756 17.888 229.15 17.888H230.286C230.83 17.888 231.31 18.016 231.726 18.272C232.153 18.5173 232.484 18.8693 232.718 19.328C232.964 19.776 233.086 20.2933 233.086 20.88V22.944C233.086 23.5733 232.964 24.128 232.718 24.608C232.484 25.088 232.148 25.4613 231.71 25.728C231.284 25.9947 230.788 26.128 230.222 26.128H229.102ZM230.19 25.104C230.702 25.104 231.118 24.9067 231.438 24.512C231.769 24.1067 231.934 23.584 231.934 22.944V20.88C231.934 20.2933 231.774 19.8187 231.454 19.456C231.145 19.0933 230.745 18.912 230.254 18.912H229.182C228.628 18.912 228.153 19.1147 227.758 19.52C227.364 19.9253 227.145 20.4587 227.102 21.12V23.072C227.124 23.4453 227.23 23.7867 227.422 24.096C227.614 24.4053 227.86 24.6507 228.158 24.832C228.457 25.0133 228.772 25.104 229.102 25.104H230.19ZM237.472 26.128C236.662 26.128 236.011 25.8987 235.52 25.44C235.03 24.9813 234.784 24.3787 234.784 23.632H235.904C235.904 24.08 236.048 24.4427 236.336 24.72C236.624 24.9973 237.003 25.136 237.472 25.136H238.864C239.323 25.136 239.696 25.0453 239.984 24.864C240.272 24.672 240.416 24.4267 240.416 24.128V23.584C240.416 23.3813 240.336 23.2053 240.176 23.056C240.016 22.896 239.808 22.7893 239.552 22.736L236.784 22.256C236.23 22.16 235.782 21.952 235.44 21.632C235.11 21.3013 234.944 20.9173 234.944 20.48V19.952C234.944 19.3333 235.179 18.8373 235.648 18.464C236.118 18.08 236.736 17.888 237.504 17.888H238.88C239.627 17.888 240.23 18.1013 240.688 18.528C241.147 18.944 241.376 19.4987 241.376 20.192H240.256C240.246 19.7973 240.112 19.4827 239.856 19.248C239.611 19.0027 239.286 18.88 238.88 18.88H237.504C237.078 18.88 236.736 18.9813 236.48 19.184C236.224 19.376 236.096 19.632 236.096 19.952V20.416C236.096 20.6187 236.182 20.8 236.352 20.96C236.534 21.12 236.763 21.2213 237.04 21.264L239.792 21.744C240.326 21.84 240.752 22.048 241.072 22.368C241.403 22.688 241.568 23.072 241.568 23.52V24.16C241.568 24.7467 241.318 25.2213 240.816 25.584C240.326 25.9467 239.675 26.128 238.864 26.128H237.472ZM243.897 14.8H245.049V22.816H243.897V14.8ZM244.473 26.16C244.217 26.16 244.009 26.08 243.849 25.92C243.689 25.76 243.609 25.552 243.609 25.296C243.609 25.04 243.689 24.832 243.849 24.672C244.009 24.512 244.217 24.432 244.473 24.432C244.729 24.432 244.937 24.512 245.097 24.672C245.257 24.832 245.337 25.04 245.337 25.296C245.337 25.552 245.257 25.76 245.097 25.92C244.937 26.08 244.729 26.16 244.473 26.16Z\" fill=\"white\" />\n                <rect width=\"313\" height=\"75\" transform=\"translate(1 38)\" fill=\"white\" />\n                <path d=\"M24.632 67.896H19.72L18.568 71H17.352L21.656 59.8H22.2C22.552 59.8 22.808 60.0133 22.968 60.44L25.432 66.904H25.448V66.936L27 71H25.784L24.632 67.896ZM20.088 66.904H24.264L22.184 61.336H22.168L20.088 66.904ZM28.5754 63.016H29.6954V64.2C29.9407 63.816 30.2607 63.5013 30.6554 63.256C31.05 63.0107 31.4447 62.888 31.8394 62.888H32.9274C33.6634 62.888 34.2554 63.1387 34.7034 63.64C35.162 64.1413 35.3914 64.7973 35.3914 65.608V71H34.2394V65.576C34.2394 65.0853 34.1167 64.6853 33.8714 64.376C33.626 64.0667 33.3007 63.912 32.8954 63.912H31.8714C31.37 63.912 30.9114 64.1093 30.4954 64.504C30.09 64.8987 29.834 65.4053 29.7274 66.024V71H28.5754V63.016ZM40.0036 71.128C39.193 71.128 38.5423 70.8987 38.0516 70.44C37.561 69.9813 37.3156 69.3787 37.3156 68.632H38.4356C38.4356 69.08 38.5796 69.4427 38.8676 69.72C39.1556 69.9973 39.5343 70.136 40.0036 70.136H41.3956C41.8543 70.136 42.2276 70.0453 42.5156 69.864C42.8036 69.672 42.9476 69.4267 42.9476 69.128V68.584C42.9476 68.3813 42.8676 68.2053 42.7076 68.056C42.5476 67.896 42.3396 67.7893 42.0836 67.736L39.3156 67.256C38.761 67.16 38.313 66.952 37.9716 66.632C37.641 66.3013 37.4756 65.9173 37.4756 65.48V64.952C37.4756 64.3333 37.7103 63.8373 38.1796 63.464C38.649 63.08 39.2676 62.888 40.0356 62.888H41.4116C42.1583 62.888 42.761 63.1013 43.2196 63.528C43.6783 63.944 43.9076 64.4987 43.9076 65.192H42.7876C42.777 64.7973 42.6436 64.4827 42.3876 64.248C42.1423 64.0027 41.817 63.88 41.4116 63.88H40.0356C39.609 63.88 39.2676 63.9813 39.0116 64.184C38.7556 64.376 38.6276 64.632 38.6276 64.952V65.416C38.6276 65.6187 38.713 65.8 38.8836 65.96C39.065 66.12 39.2943 66.2213 39.5716 66.264L42.3236 66.744C42.857 66.84 43.2836 67.048 43.6036 67.368C43.9343 67.688 44.0996 68.072 44.0996 68.52V69.16C44.0996 69.7467 43.849 70.2213 43.3476 70.584C42.857 70.9467 42.2063 71.128 41.3956 71.128H40.0036ZM55.8841 63.016L54.1561 70.072C54.0708 70.392 53.9535 70.6267 53.8041 70.776C53.6548 70.9253 53.4521 71 53.1961 71H52.6521L50.6521 64.968L48.5881 71H48.0441C47.7988 71 47.5961 70.9253 47.4361 70.776C47.2761 70.6267 47.1588 70.392 47.0841 70.072L45.3401 63.016H46.5561L48.0441 69.72L50.2041 63.24H50.6201C50.9295 63.24 51.1375 63.4107 51.2441 63.752L53.1961 69.672L54.6681 63.016H55.8841ZM60.0751 71.128C59.1791 71.128 58.4591 70.8667 57.9151 70.344C57.3711 69.8107 57.0991 69.1067 57.0991 68.232V65.944C57.0991 65.0267 57.3711 64.2907 57.9151 63.736C58.4591 63.1707 59.1791 62.888 60.0751 62.888H61.3871C62.2405 62.888 62.9285 63.16 63.4511 63.704C63.9738 64.248 64.2351 64.968 64.2351 65.864V67.272H58.2511V68.232C58.2511 68.7867 58.4165 69.24 58.7471 69.592C59.0885 69.9333 59.5311 70.104 60.0751 70.104H61.2911C61.8245 70.104 62.2565 69.96 62.5871 69.672C62.9178 69.3733 63.0831 68.9787 63.0831 68.488H64.2031C64.2031 69.2773 63.9365 69.9173 63.4031 70.408C62.8698 70.888 62.1658 71.128 61.2911 71.128H60.0751ZM63.0831 66.28V65.864C63.0831 65.2773 62.9285 64.808 62.6191 64.456C62.3098 64.0933 61.8991 63.912 61.3871 63.912H60.0751C59.5311 63.912 59.0885 64.0987 58.7471 64.472C58.4165 64.8453 58.2511 65.336 58.2511 65.944V66.28H63.0831ZM66.2473 63.016H67.3673V64.248C67.5806 63.8747 67.9006 63.5707 68.3273 63.336C68.7646 63.1013 69.2179 62.984 69.6873 62.984H70.3913V64.024H69.6873C69.0046 64.024 68.4499 64.2427 68.0233 64.68C67.6073 65.1067 67.3993 65.6773 67.3993 66.392V71H66.2473V63.016ZM78.395 71.128C77.6163 71.128 76.9923 70.9253 76.523 70.52C76.0643 70.1147 75.835 69.5707 75.835 68.888V68.376C75.835 67.704 76.075 67.1653 76.555 66.76C77.035 66.3547 77.6697 66.152 78.459 66.152H79.483C79.835 66.152 80.1977 66.2053 80.571 66.312C80.9443 66.4187 81.2643 66.5627 81.531 66.744V65.416C81.531 64.968 81.3923 64.6053 81.115 64.328C80.8377 64.04 80.4697 63.896 80.011 63.896H78.731C78.2723 63.896 77.9043 64.0027 77.627 64.216C77.3497 64.4293 77.211 64.712 77.211 65.064H76.059C76.059 64.4133 76.3043 63.8907 76.795 63.496C77.2857 63.0907 77.931 62.888 78.731 62.888H80.011C80.8003 62.888 81.435 63.1227 81.915 63.592C82.4057 64.0507 82.651 64.6587 82.651 65.416V71H81.563V69.88C81.3177 70.264 80.9923 70.568 80.587 70.792C80.1923 71.016 79.7817 71.128 79.355 71.128H78.395ZM79.387 70.12C79.8883 70.12 80.3363 69.9653 80.731 69.656C81.1257 69.3467 81.3923 68.936 81.531 68.424V67.832C81.3177 67.6293 81.019 67.4693 80.635 67.352C80.2617 67.224 79.8777 67.16 79.483 67.16H78.459C78.0217 67.16 77.6643 67.272 77.387 67.496C77.1203 67.72 76.987 68.0133 76.987 68.376V68.888C76.987 69.2613 77.115 69.56 77.371 69.784C77.627 70.008 77.9683 70.12 78.395 70.12H79.387ZM89.9379 64.04H88.5619V63.016H89.9379V62.392C89.9379 61.5173 90.1619 60.856 90.6099 60.408C91.0579 59.96 91.7139 59.736 92.5779 59.736H93.1859V60.728H92.5779C92.0659 60.728 91.6872 60.8667 91.4419 61.144C91.2072 61.4107 91.0899 61.8267 91.0899 62.392V63.016H93.0099V64.04H91.0899V71H89.9379V64.04ZM97.122 71.128C96.226 71.128 95.506 70.8667 94.962 70.344C94.418 69.8107 94.146 69.1067 94.146 68.232V65.944C94.146 65.0267 94.418 64.2907 94.962 63.736C95.506 63.1707 96.226 62.888 97.122 62.888H98.434C99.2873 62.888 99.9753 63.16 100.498 63.704C101.021 64.248 101.282 64.968 101.282 65.864V67.272H95.298V68.232C95.298 68.7867 95.4633 69.24 95.794 69.592C96.1353 69.9333 96.578 70.104 97.122 70.104H98.338C98.8713 70.104 99.3033 69.96 99.634 69.672C99.9647 69.3733 100.13 68.9787 100.13 68.488H101.25C101.25 69.2773 100.983 69.9173 100.45 70.408C99.9167 70.888 99.2127 71.128 98.338 71.128H97.122ZM100.13 66.28V65.864C100.13 65.2773 99.9753 64.808 99.666 64.456C99.3567 64.0933 98.946 63.912 98.434 63.912H97.122C96.578 63.912 96.1353 64.0987 95.794 64.472C95.4633 64.8453 95.298 65.336 95.298 65.944V66.28H100.13ZM113.134 63.016L111.406 70.072C111.321 70.392 111.203 70.6267 111.054 70.776C110.905 70.9253 110.702 71 110.446 71H109.902L107.902 64.968L105.838 71H105.294C105.049 71 104.846 70.9253 104.686 70.776C104.526 70.6267 104.409 70.392 104.334 70.072L102.59 63.016H103.806L105.294 69.72L107.454 63.24H107.87C108.179 63.24 108.387 63.4107 108.494 63.752L110.446 69.672L111.918 63.016H113.134ZM124.677 70.056C124.453 70.376 124.149 70.6373 123.765 70.84C123.392 71.032 123.024 71.128 122.661 71.128H121.493C120.65 71.128 119.973 70.8507 119.461 70.296C118.949 69.7307 118.693 68.9947 118.693 68.088V66.088C118.693 65.128 118.965 64.3547 119.509 63.768C120.053 63.1813 120.768 62.888 121.653 62.888H122.805C123.157 62.888 123.509 62.984 123.861 63.176C124.224 63.3573 124.506 63.6027 124.709 63.912V63.016H125.829V74.248H124.677V70.056ZM122.661 70.104C123.194 70.104 123.653 69.896 124.037 69.48C124.421 69.064 124.634 68.536 124.677 67.896V65.768C124.634 65.224 124.432 64.7813 124.069 64.44C123.717 64.088 123.296 63.912 122.805 63.912H121.653C121.109 63.912 120.672 64.1147 120.341 64.52C120.01 64.9147 119.845 65.4373 119.845 66.088V68.088C119.845 68.696 120 69.1867 120.309 69.56C120.618 69.9227 121.024 70.104 121.525 70.104H122.661ZM130.647 71.128C129.911 71.128 129.314 70.8773 128.855 70.376C128.396 69.8747 128.167 69.2187 128.167 68.408V63.016H129.319V68.44C129.319 68.9413 129.442 69.3467 129.687 69.656C129.932 69.9547 130.252 70.104 130.647 70.104H131.639C132.13 70.104 132.583 69.9067 132.999 69.512C133.415 69.1173 133.682 68.6213 133.799 68.024V63.016H134.951V71H133.831V69.784C133.586 70.168 133.26 70.488 132.855 70.744C132.45 71 132.055 71.128 131.671 71.128H130.647ZM140.044 71.128C139.148 71.128 138.428 70.8667 137.884 70.344C137.34 69.8107 137.068 69.1067 137.068 68.232V65.944C137.068 65.0267 137.34 64.2907 137.884 63.736C138.428 63.1707 139.148 62.888 140.044 62.888H141.356C142.209 62.888 142.897 63.16 143.42 63.704C143.943 64.248 144.204 64.968 144.204 65.864V67.272H138.22V68.232C138.22 68.7867 138.385 69.24 138.716 69.592C139.057 69.9333 139.5 70.104 140.044 70.104H141.26C141.793 70.104 142.225 69.96 142.556 69.672C142.887 69.3733 143.052 68.9787 143.052 68.488H144.172C144.172 69.2773 143.905 69.9173 143.372 70.408C142.839 70.888 142.135 71.128 141.26 71.128H140.044ZM143.052 66.28V65.864C143.052 65.2773 142.897 64.808 142.588 64.456C142.279 64.0933 141.868 63.912 141.356 63.912H140.044C139.5 63.912 139.057 64.0987 138.716 64.472C138.385 64.8453 138.22 65.336 138.22 65.944V66.28H143.052ZM148.488 71.128C147.677 71.128 147.027 70.8987 146.536 70.44C146.045 69.9813 145.8 69.3787 145.8 68.632H146.92C146.92 69.08 147.064 69.4427 147.352 69.72C147.64 69.9973 148.019 70.136 148.488 70.136H149.88C150.339 70.136 150.712 70.0453 151 69.864C151.288 69.672 151.432 69.4267 151.432 69.128V68.584C151.432 68.3813 151.352 68.2053 151.192 68.056C151.032 67.896 150.824 67.7893 150.568 67.736L147.8 67.256C147.245 67.16 146.797 66.952 146.456 66.632C146.125 66.3013 145.96 65.9173 145.96 65.48V64.952C145.96 64.3333 146.195 63.8373 146.664 63.464C147.133 63.08 147.752 62.888 148.52 62.888H149.896C150.643 62.888 151.245 63.1013 151.704 63.528C152.163 63.944 152.392 64.4987 152.392 65.192H151.272C151.261 64.7973 151.128 64.4827 150.872 64.248C150.627 64.0027 150.301 63.88 149.896 63.88H148.52C148.093 63.88 147.752 63.9813 147.496 64.184C147.24 64.376 147.112 64.632 147.112 64.952V65.416C147.112 65.6187 147.197 65.8 147.368 65.96C147.549 66.12 147.779 66.2213 148.056 66.264L150.808 66.744C151.341 66.84 151.768 67.048 152.088 67.368C152.419 67.688 152.584 68.072 152.584 68.52V69.16C152.584 69.7467 152.333 70.2213 151.832 70.584C151.341 70.9467 150.691 71.128 149.88 71.128H148.488ZM157.571 71C156.728 71 156.12 70.8187 155.747 70.456C155.384 70.0933 155.203 69.496 155.203 68.664V64.04H153.795V63.016H155.203V60.6H156.355V63.016H158.435V64.04H156.355V68.664C156.355 69.1333 156.445 69.4693 156.627 69.672C156.819 69.8747 157.133 69.976 157.571 69.976H158.435V71H157.571ZM161.408 61.816C161.152 61.816 160.944 61.736 160.784 61.576C160.624 61.416 160.544 61.208 160.544 60.952C160.544 60.696 160.624 60.488 160.784 60.328C160.944 60.168 161.152 60.088 161.408 60.088C161.664 60.088 161.872 60.168 162.032 60.328C162.192 60.488 162.272 60.696 162.272 60.952C162.272 61.208 162.192 61.416 162.032 61.576C161.872 61.736 161.664 61.816 161.408 61.816ZM160.832 63.016H161.984V71H160.832V63.016ZM167.356 71.128C166.46 71.128 165.74 70.8507 165.196 70.296C164.652 69.7413 164.38 69.0107 164.38 68.104V65.912C164.38 65.0053 164.652 64.2747 165.196 63.72C165.751 63.1653 166.482 62.888 167.388 62.888H168.7C169.607 62.888 170.332 63.1653 170.876 63.72C171.431 64.2747 171.708 65.0053 171.708 65.912V68.104C171.708 69.0107 171.431 69.7413 170.876 70.296C170.322 70.8507 169.586 71.128 168.668 71.128H167.356ZM168.668 70.104C169.244 70.104 169.703 69.9227 170.044 69.56C170.386 69.1867 170.556 68.7013 170.556 68.104V65.912C170.556 65.3147 170.386 64.8347 170.044 64.472C169.703 64.0987 169.255 63.912 168.7 63.912H167.388C166.834 63.912 166.386 64.0987 166.044 64.472C165.703 64.8347 165.532 65.3147 165.532 65.912V68.104C165.532 68.712 165.698 69.1973 166.028 69.56C166.359 69.9227 166.802 70.104 167.356 70.104H168.668ZM173.825 63.016H174.945V64.2C175.191 63.816 175.511 63.5013 175.905 63.256C176.3 63.0107 176.695 62.888 177.089 62.888H178.177C178.913 62.888 179.505 63.1387 179.953 63.64C180.412 64.1413 180.641 64.7973 180.641 65.608V71H179.489V65.576C179.489 65.0853 179.367 64.6853 179.121 64.376C178.876 64.0667 178.551 63.912 178.145 63.912H177.121C176.62 63.912 176.161 64.1093 175.745 64.504C175.34 64.8987 175.084 65.4053 174.977 66.024V71H173.825V63.016ZM185.254 71.128C184.443 71.128 183.792 70.8987 183.302 70.44C182.811 69.9813 182.566 69.3787 182.566 68.632H183.686C183.686 69.08 183.83 69.4427 184.118 69.72C184.406 69.9973 184.784 70.136 185.254 70.136H186.646C187.104 70.136 187.478 70.0453 187.766 69.864C188.054 69.672 188.198 69.4267 188.198 69.128V68.584C188.198 68.3813 188.118 68.2053 187.958 68.056C187.798 67.896 187.59 67.7893 187.334 67.736L184.566 67.256C184.011 67.16 183.563 66.952 183.222 66.632C182.891 66.3013 182.726 65.9173 182.726 65.48V64.952C182.726 64.3333 182.96 63.8373 183.43 63.464C183.899 63.08 184.518 62.888 185.286 62.888H186.662C187.408 62.888 188.011 63.1013 188.47 63.528C188.928 63.944 189.158 64.4987 189.158 65.192H188.038C188.027 64.7973 187.894 64.4827 187.638 64.248C187.392 64.0027 187.067 63.88 186.662 63.88H185.286C184.859 63.88 184.518 63.9813 184.262 64.184C184.006 64.376 183.878 64.632 183.878 64.952V65.416C183.878 65.6187 183.963 65.8 184.134 65.96C184.315 66.12 184.544 66.2213 184.822 66.264L187.574 66.744C188.107 66.84 188.534 67.048 188.854 67.368C189.184 67.688 189.35 68.072 189.35 68.52V69.16C189.35 69.7467 189.099 70.2213 188.598 70.584C188.107 70.9467 187.456 71.128 186.646 71.128H185.254ZM198.586 71C197.744 71 197.136 70.8187 196.762 70.456C196.4 70.0933 196.218 69.496 196.218 68.664V64.04H194.81V63.016H196.218V60.6H197.37V63.016H199.45V64.04H197.37V68.664C197.37 69.1333 197.461 69.4693 197.642 69.672C197.834 69.8747 198.149 69.976 198.586 69.976H199.45V71H198.586ZM203.966 71.128C203.07 71.128 202.35 70.8507 201.806 70.296C201.262 69.7413 200.99 69.0107 200.99 68.104V65.912C200.99 65.0053 201.262 64.2747 201.806 63.72C202.36 63.1653 203.091 62.888 203.998 62.888H205.31C206.216 62.888 206.942 63.1653 207.486 63.72C208.04 64.2747 208.318 65.0053 208.318 65.912V68.104C208.318 69.0107 208.04 69.7413 207.486 70.296C206.931 70.8507 206.195 71.128 205.278 71.128H203.966ZM205.278 70.104C205.854 70.104 206.312 69.9227 206.654 69.56C206.995 69.1867 207.166 68.7013 207.166 68.104V65.912C207.166 65.3147 206.995 64.8347 206.654 64.472C206.312 64.0987 205.864 63.912 205.31 63.912H203.998C203.443 63.912 202.995 64.0987 202.654 64.472C202.312 64.8347 202.142 65.3147 202.142 65.912V68.104C202.142 68.712 202.307 69.1973 202.638 69.56C202.968 69.9227 203.411 70.104 203.966 70.104H205.278ZM214.591 63.016H215.711V64.248C215.924 63.8747 216.244 63.5707 216.671 63.336C217.108 63.1013 217.562 62.984 218.031 62.984H218.735V64.024H218.031C217.348 64.024 216.794 64.2427 216.367 64.68C215.951 65.1067 215.743 65.6773 215.743 66.392V71H214.591V63.016ZM222.685 71.128C221.789 71.128 221.069 70.8667 220.525 70.344C219.981 69.8107 219.709 69.1067 219.709 68.232V65.944C219.709 65.0267 219.981 64.2907 220.525 63.736C221.069 63.1707 221.789 62.888 222.685 62.888H223.997C224.85 62.888 225.538 63.16 226.061 63.704C226.583 64.248 226.845 64.968 226.845 65.864V67.272H220.861V68.232C220.861 68.7867 221.026 69.24 221.357 69.592C221.698 69.9333 222.141 70.104 222.685 70.104H223.901C224.434 70.104 224.866 69.96 225.197 69.672C225.527 69.3733 225.693 68.9787 225.693 68.488H226.812C226.812 69.2773 226.546 69.9173 226.013 70.408C225.479 70.888 224.775 71.128 223.901 71.128H222.685ZM225.693 66.28V65.864C225.693 65.2773 225.538 64.808 225.229 64.456C224.919 64.0933 224.509 63.912 223.997 63.912H222.685C222.141 63.912 221.698 64.0987 221.357 64.472C221.026 64.8453 220.861 65.336 220.861 65.944V66.28H225.693ZM231.449 71.128C230.574 71.128 229.87 70.8667 229.337 70.344C228.803 69.8107 228.537 69.1067 228.537 68.232V65.944C228.537 65.0267 228.803 64.2907 229.337 63.736C229.87 63.1707 230.569 62.888 231.433 62.888H232.745C233.566 62.888 234.227 63.1173 234.729 63.576C235.23 64.0347 235.481 64.6373 235.481 65.384H234.361C234.361 64.9467 234.211 64.5947 233.913 64.328C233.625 64.0507 233.235 63.912 232.745 63.912H231.433C230.91 63.912 230.489 64.0987 230.169 64.472C229.849 64.8453 229.689 65.336 229.689 65.944V68.232C229.689 68.7973 229.849 69.2507 230.169 69.592C230.499 69.9333 230.926 70.104 231.449 70.104H232.761C233.262 70.104 233.662 69.928 233.961 69.576C234.27 69.224 234.425 68.7547 234.425 68.168H235.545C235.545 69.0533 235.289 69.768 234.777 70.312C234.265 70.856 233.593 71.128 232.761 71.128H231.449ZM240.091 71.128C239.195 71.128 238.475 70.8667 237.931 70.344C237.387 69.8107 237.115 69.1067 237.115 68.232V65.944C237.115 65.0267 237.387 64.2907 237.931 63.736C238.475 63.1707 239.195 62.888 240.091 62.888H241.403C242.256 62.888 242.944 63.16 243.467 63.704C243.989 64.248 244.251 64.968 244.251 65.864V67.272H238.267V68.232C238.267 68.7867 238.432 69.24 238.763 69.592C239.104 69.9333 239.547 70.104 240.091 70.104H241.307C241.84 70.104 242.272 69.96 242.603 69.672C242.933 69.3733 243.099 68.9787 243.099 68.488H244.219C244.219 69.2773 243.952 69.9173 243.419 70.408C242.885 70.888 242.181 71.128 241.307 71.128H240.091ZM243.099 66.28V65.864C243.099 65.2773 242.944 64.808 242.635 64.456C242.325 64.0933 241.915 63.912 241.403 63.912H240.091C239.547 63.912 239.104 64.0987 238.763 64.472C238.432 64.8453 238.267 65.336 238.267 65.944V66.28H243.099ZM247.127 61.816C246.871 61.816 246.663 61.736 246.503 61.576C246.343 61.416 246.263 61.208 246.263 60.952C246.263 60.696 246.343 60.488 246.503 60.328C246.663 60.168 246.871 60.088 247.127 60.088C247.383 60.088 247.591 60.168 247.751 60.328C247.911 60.488 247.991 60.696 247.991 60.952C247.991 61.208 247.911 61.416 247.751 61.576C247.591 61.736 247.383 61.816 247.127 61.816ZM246.551 63.016H247.703V71H246.551V63.016ZM253.187 71C252.739 71 252.414 70.728 252.211 70.184L249.459 63.016H250.675L253.139 69.736H253.155L255.619 63.016H256.835L253.731 71H253.187ZM260.778 71.128C259.882 71.128 259.162 70.8667 258.618 70.344C258.074 69.8107 257.802 69.1067 257.802 68.232V65.944C257.802 65.0267 258.074 64.2907 258.618 63.736C259.162 63.1707 259.882 62.888 260.778 62.888H262.09C262.944 62.888 263.632 63.16 264.154 63.704C264.677 64.248 264.938 64.968 264.938 65.864V67.272H258.954V68.232C258.954 68.7867 259.12 69.24 259.45 69.592C259.792 69.9333 260.234 70.104 260.778 70.104H261.994C262.528 70.104 262.96 69.96 263.29 69.672C263.621 69.3733 263.786 68.9787 263.786 68.488H264.906C264.906 69.2773 264.64 69.9173 264.106 70.408C263.573 70.888 262.869 71.128 261.994 71.128H260.778ZM263.786 66.28V65.864C263.786 65.2773 263.632 64.808 263.322 64.456C263.013 64.0933 262.602 63.912 262.09 63.912H260.778C260.234 63.912 259.792 64.0987 259.45 64.472C259.12 64.8453 258.954 65.336 258.954 65.944V66.28H263.786ZM273.411 71.128C272.632 71.128 272.008 70.9253 271.539 70.52C271.08 70.1147 270.851 69.5707 270.851 68.888V68.376C270.851 67.704 271.091 67.1653 271.571 66.76C272.051 66.3547 272.685 66.152 273.475 66.152H274.499C274.851 66.152 275.213 66.2053 275.587 66.312C275.96 66.4187 276.28 66.5627 276.547 66.744V65.416C276.547 64.968 276.408 64.6053 276.131 64.328C275.853 64.04 275.485 63.896 275.027 63.896H273.747C273.288 63.896 272.92 64.0027 272.643 64.216C272.365 64.4293 272.227 64.712 272.227 65.064H271.075C271.075 64.4133 271.32 63.8907 271.811 63.496C272.301 63.0907 272.947 62.888 273.747 62.888H275.027C275.816 62.888 276.451 63.1227 276.931 63.592C277.421 64.0507 277.667 64.6587 277.667 65.416V71H276.579V69.88C276.333 70.264 276.008 70.568 275.603 70.792C275.208 71.016 274.797 71.128 274.371 71.128H273.411ZM274.403 70.12C274.904 70.12 275.352 69.9653 275.747 69.656C276.141 69.3467 276.408 68.936 276.547 68.424V67.832C276.333 67.6293 276.035 67.4693 275.651 67.352C275.277 67.224 274.893 67.16 274.499 67.16H273.475C273.037 67.16 272.68 67.272 272.403 67.496C272.136 67.72 272.003 68.0133 272.003 68.376V68.888C272.003 69.2613 272.131 69.56 272.387 69.784C272.643 70.008 272.984 70.12 273.411 70.12H274.403ZM20.808 92.128C19.9333 92.128 19.2293 91.8667 18.696 91.344C18.1627 90.8107 17.896 90.1067 17.896 89.232V86.944C17.896 86.0267 18.1627 85.2907 18.696 84.736C19.2293 84.1707 19.928 83.888 20.792 83.888H22.104C22.9253 83.888 23.5867 84.1173 24.088 84.576C24.5893 85.0347 24.84 85.6373 24.84 86.384H23.72C23.72 85.9467 23.5707 85.5947 23.272 85.328C22.984 85.0507 22.5947 84.912 22.104 84.912H20.792C20.2693 84.912 19.848 85.0987 19.528 85.472C19.208 85.8453 19.048 86.336 19.048 86.944V89.232C19.048 89.7973 19.208 90.2507 19.528 90.592C19.8587 90.9333 20.2853 91.104 20.808 91.104H22.12C22.6213 91.104 23.0213 90.928 23.32 90.576C23.6293 90.224 23.784 89.7547 23.784 89.168H24.904C24.904 90.0533 24.648 90.768 24.136 91.312C23.624 91.856 22.952 92.128 22.12 92.128H20.808ZM29.0021 92C28.2128 92 27.6475 91.8347 27.3061 91.504C26.9648 91.1627 26.7941 90.6027 26.7941 89.824V80.8H27.9461V89.824C27.9461 90.2293 28.0261 90.5227 28.1861 90.704C28.3568 90.8853 28.6288 90.976 29.0021 90.976H29.5461V92H29.0021ZM33.4594 92.128C32.7234 92.128 32.126 91.8773 31.6674 91.376C31.2087 90.8747 30.9794 90.2187 30.9794 89.408V84.016H32.1314V89.44C32.1314 89.9413 32.254 90.3467 32.4994 90.656C32.7447 90.9547 33.0647 91.104 33.4594 91.104H34.4514C34.942 91.104 35.3954 90.9067 35.8114 90.512C36.2274 90.1173 36.494 89.6213 36.6114 89.024V84.016H37.7634V92H36.6434V90.784C36.398 91.168 36.0727 91.488 35.6674 91.744C35.262 92 34.8674 92.128 34.4834 92.128H33.4594ZM43.3524 92.128C43.0004 92.128 42.627 92.0213 42.2324 91.808C41.8377 91.584 41.5337 91.3067 41.3204 90.976V92H40.2004V80.8H41.3524V84.96C41.587 84.6293 41.8857 84.368 42.2484 84.176C42.6217 83.984 43.0057 83.888 43.4004 83.888H44.5364C45.0804 83.888 45.5604 84.016 45.9764 84.272C46.403 84.5173 46.7337 84.8693 46.9684 85.328C47.2137 85.776 47.3364 86.2933 47.3364 86.88V88.944C47.3364 89.5733 47.2137 90.128 46.9684 90.608C46.7337 91.088 46.3977 91.4613 45.9604 91.728C45.5337 91.9947 45.0377 92.128 44.4724 92.128H43.3524ZM44.4404 91.104C44.9524 91.104 45.3684 90.9067 45.6884 90.512C46.019 90.1067 46.1844 89.584 46.1844 88.944V86.88C46.1844 86.2933 46.0244 85.8187 45.7044 85.456C45.395 85.0933 44.995 84.912 44.5044 84.912H43.4324C42.8777 84.912 42.403 85.1147 42.0084 85.52C41.6137 85.9253 41.395 86.4587 41.3524 87.12V89.072C41.3737 89.4453 41.4804 89.7867 41.6724 90.096C41.8644 90.4053 42.1097 90.6507 42.4084 90.832C42.707 91.0133 43.0217 91.104 43.3524 91.104H44.4404ZM53.6066 84.016H54.7266V85.248C54.94 84.8747 55.26 84.5707 55.6866 84.336C56.124 84.1013 56.5773 83.984 57.0466 83.984H57.7506V85.024H57.0466C56.364 85.024 55.8093 85.2427 55.3826 85.68C54.9666 86.1067 54.7586 86.6773 54.7586 87.392V92H53.6066V84.016ZM61.7001 92.128C60.8041 92.128 60.0841 91.8667 59.5401 91.344C58.9961 90.8107 58.7241 90.1067 58.7241 89.232V86.944C58.7241 86.0267 58.9961 85.2907 59.5401 84.736C60.0841 84.1707 60.8041 83.888 61.7001 83.888H63.0121C63.8655 83.888 64.5535 84.16 65.0761 84.704C65.5988 85.248 65.8601 85.968 65.8601 86.864V88.272H59.8761V89.232C59.8761 89.7867 60.0415 90.24 60.3721 90.592C60.7135 90.9333 61.1561 91.104 61.7001 91.104H62.9161C63.4495 91.104 63.8815 90.96 64.2121 90.672C64.5428 90.3733 64.7081 89.9787 64.7081 89.488H65.8281C65.8281 90.2773 65.5615 90.9173 65.0281 91.408C64.4948 91.888 63.7908 92.128 62.9161 92.128H61.7001ZM64.7081 87.28V86.864C64.7081 86.2773 64.5535 85.808 64.2441 85.456C63.9348 85.0933 63.5241 84.912 63.0121 84.912H61.7001C61.1561 84.912 60.7135 85.0987 60.3721 85.472C60.0415 85.8453 59.8761 86.336 59.8761 86.944V87.28H64.7081ZM70.4643 92.128C69.5896 92.128 68.8856 91.8667 68.3523 91.344C67.8189 90.8107 67.5523 90.1067 67.5523 89.232V86.944C67.5523 86.0267 67.8189 85.2907 68.3523 84.736C68.8856 84.1707 69.5843 83.888 70.4483 83.888H71.7603C72.5816 83.888 73.2429 84.1173 73.7443 84.576C74.2456 85.0347 74.4963 85.6373 74.4963 86.384H73.3763C73.3763 85.9467 73.2269 85.5947 72.9283 85.328C72.6403 85.0507 72.2509 84.912 71.7603 84.912H70.4483C69.9256 84.912 69.5043 85.0987 69.1843 85.472C68.8643 85.8453 68.7043 86.336 68.7043 86.944V89.232C68.7043 89.7973 68.8643 90.2507 69.1843 90.592C69.5149 90.9333 69.9416 91.104 70.4643 91.104H71.7763C72.2776 91.104 72.6776 90.928 72.9763 90.576C73.2856 90.224 73.4403 89.7547 73.4403 89.168H74.5603C74.5603 90.0533 74.3043 90.768 73.7923 91.312C73.2803 91.856 72.6083 92.128 71.7763 92.128H70.4643ZM79.1064 92.128C78.2104 92.128 77.4904 91.8507 76.9464 91.296C76.4024 90.7413 76.1304 90.0107 76.1304 89.104V86.912C76.1304 86.0053 76.4024 85.2747 76.9464 84.72C77.501 84.1653 78.2317 83.888 79.1384 83.888H80.4504C81.357 83.888 82.0824 84.1653 82.6264 84.72C83.181 85.2747 83.4584 86.0053 83.4584 86.912V89.104C83.4584 90.0107 83.181 90.7413 82.6264 91.296C82.0717 91.8507 81.3357 92.128 80.4184 92.128H79.1064ZM80.4184 91.104C80.9944 91.104 81.453 90.9227 81.7944 90.56C82.1357 90.1867 82.3064 89.7013 82.3064 89.104V86.912C82.3064 86.3147 82.1357 85.8347 81.7944 85.472C81.453 85.0987 81.005 84.912 80.4504 84.912H79.1384C78.5837 84.912 78.1357 85.0987 77.7944 85.472C77.453 85.8347 77.2824 86.3147 77.2824 86.912V89.104C77.2824 89.712 77.4477 90.1973 77.7784 90.56C78.109 90.9227 78.5517 91.104 79.1064 91.104H80.4184ZM94.3274 83.888C95.0314 83.888 95.586 84.1173 95.9914 84.576C96.4074 85.024 96.6154 85.648 96.6154 86.448V92H95.4634V86.416C95.4634 85.9467 95.3567 85.5787 95.1434 85.312C94.93 85.0453 94.6474 84.912 94.2954 84.912H93.3834C92.9247 84.912 92.546 85.0667 92.2474 85.376C91.9487 85.6853 91.7567 86.1227 91.6714 86.688V92H90.5194V86.512C90.5194 86.0107 90.418 85.6213 90.2154 85.344C90.0234 85.056 89.7567 84.912 89.4154 84.912H88.5034C88.066 84.912 87.682 85.104 87.3514 85.488C87.0207 85.872 86.8127 86.3733 86.7274 86.992V92H85.5754V84.016H86.6954V85.168C86.9087 84.7627 87.1754 84.448 87.4954 84.224C87.8154 84 88.1514 83.888 88.5034 83.888H89.4474C89.8954 83.888 90.2794 84 90.5994 84.224C90.93 84.4373 91.1807 84.752 91.3514 85.168C91.5967 84.7413 91.89 84.4213 92.2314 84.208C92.5727 83.9947 92.946 83.888 93.3514 83.888H94.3274ZM107.702 83.888C108.406 83.888 108.961 84.1173 109.366 84.576C109.782 85.024 109.99 85.648 109.99 86.448V92H108.838V86.416C108.838 85.9467 108.732 85.5787 108.518 85.312C108.305 85.0453 108.022 84.912 107.67 84.912H106.758C106.3 84.912 105.921 85.0667 105.622 85.376C105.324 85.6853 105.132 86.1227 105.046 86.688V92H103.894V86.512C103.894 86.0107 103.793 85.6213 103.59 85.344C103.398 85.056 103.132 84.912 102.79 84.912H101.878C101.441 84.912 101.057 85.104 100.726 85.488C100.396 85.872 100.188 86.3733 100.102 86.992V92H98.9504V84.016H100.07V85.168C100.284 84.7627 100.55 84.448 100.87 84.224C101.19 84 101.526 83.888 101.878 83.888H102.822C103.27 83.888 103.654 84 103.974 84.224C104.305 84.4373 104.556 84.752 104.726 85.168C104.972 84.7413 105.265 84.4213 105.606 84.208C105.948 83.9947 106.321 83.888 106.726 83.888H107.702ZM114.981 92.128C114.085 92.128 113.365 91.8667 112.821 91.344C112.277 90.8107 112.005 90.1067 112.005 89.232V86.944C112.005 86.0267 112.277 85.2907 112.821 84.736C113.365 84.1707 114.085 83.888 114.981 83.888H116.293C117.147 83.888 117.835 84.16 118.357 84.704C118.88 85.248 119.141 85.968 119.141 86.864V88.272H113.157V89.232C113.157 89.7867 113.323 90.24 113.653 90.592C113.995 90.9333 114.437 91.104 114.981 91.104H116.197C116.731 91.104 117.163 90.96 117.493 90.672C117.824 90.3733 117.989 89.9787 117.989 89.488H119.109C119.109 90.2773 118.843 90.9173 118.309 91.408C117.776 91.888 117.072 92.128 116.197 92.128H114.981ZM117.989 87.28V86.864C117.989 86.2773 117.835 85.808 117.525 85.456C117.216 85.0933 116.805 84.912 116.293 84.912H114.981C114.437 84.912 113.995 85.0987 113.653 85.472C113.323 85.8453 113.157 86.336 113.157 86.944V87.28H117.989ZM121.154 84.016H122.274V85.2C122.519 84.816 122.839 84.5013 123.234 84.256C123.628 84.0107 124.023 83.888 124.418 83.888H125.506C126.242 83.888 126.834 84.1387 127.282 84.64C127.74 85.1413 127.97 85.7973 127.97 86.608V92H126.818V86.576C126.818 86.0853 126.695 85.6853 126.45 85.376C126.204 85.0667 125.879 84.912 125.474 84.912H124.45C123.948 84.912 123.49 85.1093 123.074 85.504C122.668 85.8987 122.412 86.4053 122.306 87.024V92H121.154V84.016ZM132.79 92.128C132.246 92.128 131.76 92 131.334 91.744C130.907 91.488 130.576 91.1307 130.342 90.672C130.107 90.2133 129.99 89.68 129.99 89.072V87.152C129.99 86.512 130.112 85.9467 130.358 85.456C130.603 84.9547 130.95 84.5707 131.398 84.304C131.846 84.0267 132.358 83.888 132.934 83.888H134.118C134.48 83.888 134.827 83.9733 135.158 84.144C135.499 84.3147 135.771 84.5493 135.974 84.848V80.8H137.126V92H136.006V90.816C135.76 91.2107 135.44 91.5307 135.046 91.776C134.651 92.0107 134.267 92.128 133.894 92.128H132.79ZM133.862 91.104C134.203 91.104 134.534 90.9973 134.854 90.784C135.174 90.56 135.435 90.272 135.638 89.92C135.84 89.568 135.952 89.2053 135.974 88.832V86.816C135.899 86.2507 135.686 85.792 135.334 85.44C134.992 85.088 134.576 84.912 134.086 84.912H132.966C132.422 84.912 131.979 85.12 131.638 85.536C131.307 85.9413 131.142 86.48 131.142 87.152V89.072C131.142 89.6693 131.296 90.16 131.606 90.544C131.926 90.9173 132.331 91.104 132.822 91.104H133.862ZM141.864 92.128C141.085 92.128 140.461 91.9253 139.992 91.52C139.533 91.1147 139.304 90.5707 139.304 89.888V89.376C139.304 88.704 139.544 88.1653 140.024 87.76C140.504 87.3547 141.138 87.152 141.928 87.152H142.952C143.304 87.152 143.666 87.2053 144.04 87.312C144.413 87.4187 144.733 87.5627 145 87.744V86.416C145 85.968 144.861 85.6053 144.584 85.328C144.306 85.04 143.938 84.896 143.48 84.896H142.2C141.741 84.896 141.373 85.0027 141.096 85.216C140.818 85.4293 140.68 85.712 140.68 86.064H139.528C139.528 85.4133 139.773 84.8907 140.264 84.496C140.754 84.0907 141.4 83.888 142.2 83.888H143.48C144.269 83.888 144.904 84.1227 145.384 84.592C145.874 85.0507 146.12 85.6587 146.12 86.416V92H145.032V90.88C144.786 91.264 144.461 91.568 144.056 91.792C143.661 92.016 143.25 92.128 142.824 92.128H141.864ZM142.856 91.12C143.357 91.12 143.805 90.9653 144.2 90.656C144.594 90.3467 144.861 89.936 145 89.424V88.832C144.786 88.6293 144.488 88.4693 144.104 88.352C143.73 88.224 143.346 88.16 142.952 88.16H141.928C141.49 88.16 141.133 88.272 140.856 88.496C140.589 88.72 140.456 89.0133 140.456 89.376V89.888C140.456 90.2613 140.584 90.56 140.84 90.784C141.096 91.008 141.437 91.12 141.864 91.12H142.856ZM151.586 92C150.744 92 150.136 91.8187 149.762 91.456C149.4 91.0933 149.218 90.496 149.218 89.664V85.04H147.81V84.016H149.218V81.6H150.37V84.016H152.45V85.04H150.37V89.664C150.37 90.1333 150.461 90.4693 150.642 90.672C150.834 90.8747 151.149 90.976 151.586 90.976H152.45V92H151.586ZM155.424 82.816C155.168 82.816 154.96 82.736 154.8 82.576C154.64 82.416 154.56 82.208 154.56 81.952C154.56 81.696 154.64 81.488 154.8 81.328C154.96 81.168 155.168 81.088 155.424 81.088C155.68 81.088 155.888 81.168 156.048 81.328C156.208 81.488 156.288 81.696 156.288 81.952C156.288 82.208 156.208 82.416 156.048 82.576C155.888 82.736 155.68 82.816 155.424 82.816ZM154.848 84.016H156V92H154.848V84.016ZM161.372 92.128C160.476 92.128 159.756 91.8507 159.212 91.296C158.668 90.7413 158.396 90.0107 158.396 89.104V86.912C158.396 86.0053 158.668 85.2747 159.212 84.72C159.767 84.1653 160.497 83.888 161.404 83.888H162.716C163.623 83.888 164.348 84.1653 164.892 84.72C165.447 85.2747 165.724 86.0053 165.724 86.912V89.104C165.724 90.0107 165.447 90.7413 164.892 91.296C164.337 91.8507 163.601 92.128 162.684 92.128H161.372ZM162.684 91.104C163.26 91.104 163.719 90.9227 164.06 90.56C164.401 90.1867 164.572 89.7013 164.572 89.104V86.912C164.572 86.3147 164.401 85.8347 164.06 85.472C163.719 85.0987 163.271 84.912 162.716 84.912H161.404C160.849 84.912 160.401 85.0987 160.06 85.472C159.719 85.8347 159.548 86.3147 159.548 86.912V89.104C159.548 89.712 159.713 90.1973 160.044 90.56C160.375 90.9227 160.817 91.104 161.372 91.104H162.684ZM167.841 84.016H168.961V85.2C169.206 84.816 169.526 84.5013 169.921 84.256C170.316 84.0107 170.71 83.888 171.105 83.888H172.193C172.929 83.888 173.521 84.1387 173.969 84.64C174.428 85.1413 174.657 85.7973 174.657 86.608V92H173.505V86.576C173.505 86.0853 173.382 85.6853 173.137 85.376C172.892 85.0667 172.566 84.912 172.161 84.912H171.137C170.636 84.912 170.177 85.1093 169.761 85.504C169.356 85.8987 169.1 86.4053 168.993 87.024V92H167.841V84.016ZM177.541 92.16C177.285 92.16 177.077 92.08 176.917 91.92C176.757 91.76 176.677 91.552 176.677 91.296C176.677 91.04 176.757 90.832 176.917 90.672C177.077 90.512 177.285 90.432 177.541 90.432C177.797 90.432 178.005 90.512 178.165 90.672C178.325 90.832 178.405 91.04 178.405 91.296C178.405 91.552 178.325 91.76 178.165 91.92C178.005 92.08 177.797 92.16 177.541 92.16Z\" fill=\"#1D1D1D\" />\n              </g>\n            </g>\n            <defs>\n              <clipPath id=\"clip0_63_2021\">\n                <rect width=\"315\" height=\"126\" fill=\"white\" />\n              </clipPath>\n              <clipPath id=\"clip1_63_2021\">\n                <rect x=\"1\" y=\"1\" width=\"313\" height=\"112\" rx=\"4\" fill=\"white\" />\n              </clipPath>\n            </defs>\n          </svg>\n\n\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"5px\",\n              cursor: \"pointer\",\n            }}\n            onClick={hideChatBubble}\n          >\n            <IoIosClose size={25} color=\"white\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBubble;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCV1l2UJx_iGwX0tC_kSX_5zoGGuH4hXsk\",\n    authDomain: \"sasclubmn.firebaseapp.com\",\n    projectId: \"sasclubmn\",\n    storageBucket: \"sasclubmn.appspot.com\",\n    messagingSenderId: \"805961519768\",\n    appId: \"1:805961519768:web:db1d1e18285a1dadfeb6ed\",\n    measurementId: \"G-BVQDK5JN7H\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore(); // Firestore 인스턴스 초기화\n\nexport { firebase, auth, db }; // firebase, auth, db를 export\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\nimport ChatIcon from \"./ChatIcon\";\n// import SASIcon from \"../public/img/SAS_logo.png\"\nimport ChatBubble from \"./ChatBubble\";\nimport { firebase } from \"./firebase\";\nimport \"firebase/auth\";\nimport { FaSyncAlt } from \"react-icons/fa\";\nimport \"./styles/Chat.css\";\n\nconst Chat = () => {\n  const [showChat, setShowChat] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [userMessageCount, setUserMessageCount] = useState(0);\n  const [userMessagesJSON, setUserMessagesJSON] = useState({}); // JSON 형태로 사용자 메시지를 저장할 상태\n  const [refreshChat, setRefreshChat] = useState(false); // 채팅창 새로고침 상태 추가\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      setUser(user);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (showChat && userMessageCount === 0) {\n      setMessages([\n        {\n          type: \"server\",\n          text:\n            \"What are your interests and hobbies outside of school? Are there any specific subjects or topics that you are passionate about?\",\n        },\n      ]);\n    }\n  }, [showChat, userMessageCount]);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  useEffect(scrollToBottom, [messages]); // 메시지가 변경될 때마다 스크롤이 최하단으로 이동하도록 설정\n\n  const toggleChat = () => {\n    setShowChat(!showChat);\n  };\n\n  const hideChatBubble = () => {\n    setShowChat(false);\n  };\n\n  const handleRefreshChat = () => {\n    setRefreshChat(true);\n  };\n\n  useEffect(() => {\n    // 새로고침이 필요한 경우, message state와 채팅 메시지를 초기화\n    if (refreshChat) {\n      setMessage(\"\");\n      setUserMessageCount(0);\n      setMessages([\n        {\n          type: \"server\",\n          text:\n            \"What are your interests and hobbies outside of school? Are there any specific subjects or topics that you are passionate about?\",\n        },\n      ]);\n      setUserMessagesJSON({});\n      setRefreshChat(false);\n    }\n  }, [refreshChat]);\n\n  const submitMessage = async (e) => {\n    e.preventDefault();\n\n    const systemMessages = [\n      'Roughly how much time can you dedicate to club activities each week? Please give your answer in the form of \"X hours\".',\n      \"Do you have a preference for specific weekdays (Monday~Friday) and/or times (flex/lunch/after school)?\",\n      \"Are there any specific goals or skills you would like to develop through club participation?\",\n      \"I am looking for a suitable club for you. Please wait a moment.\",\n    ];\n\n    if (userMessageCount < 4) {\n      setMessages([\n        ...messages,\n        { type: \"user\", text: message },\n        { type: \"server\", text: systemMessages[userMessageCount] },\n      ]);\n      setUserMessagesJSON({\n        ...userMessagesJSON,\n        [(userMessageCount + 1).toString()]: message,\n      }); // 사용자 메시지 JSON 업데이트\n      setUserMessageCount(userMessageCount + 1);\n\n      if (userMessageCount === 3) {\n        // 채팅이 끝나면 userMessagesJSON 전송\n        console.log(\"4th message : \", message);\n        setUserMessagesJSON({ ...userMessagesJSON, [\"4\"]: message });\n      }\n    }\n    setMessage(\"\");\n  };\n\n  // useEffect를 사용하여 userMessagesJSON이 업데이트될 때마다 fetch 실행\n  useEffect(() => {\n    if (userMessageCount === 4) {\n      const fetchMessages = async () => {\n        console.log(\n          `${userMessageCount}.userMessagesJSON : ${userMessagesJSON}`\n        );\n        try {\n          const response = await fetch(\n            \"https://us-central1-sasclubmn.cloudfunctions.net/sendChatGPT/\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(userMessagesJSON),\n            }\n          );\n          const data = await response.json();\n          //   console.log(\"Success:\", data);\n          const chatGPTMessage = data.message;\n          //   const formattedChatGPTMessage = chatGPTMessage.replace(/\\n/g, \"\\\\n\");\n\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { type: \"server\", text: chatGPTMessage },\n          ]);\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [userMessagesJSON, userMessageCount]);\n\n  const isInputDisabled = userMessageCount >= 4;\n\n  return (\n    <div>\n      {user && (\n        <div className=\"chat-container\">\n          <div className=\"chat-wrapper\">\n            <ChatBubble />\n            <img className=\"sas-logo\" src=\"/img/chatEagleLogo.png\" onClick={toggleChat} />\n\n            {showChat && (\n              <div className=\"chat-window\">\n                <div className=\"chat-header\">\n                  <div className=\"chat-header-text\">\n                    🗣️ Welcome to CLUBSMATE! 🗣️\n                  </div>\n                  <div className=\"chat-header-icon\">\n                    <div className=\"refresh-icon\" onClick={handleRefreshChat}>\n                      <FaSyncAlt />\n                    </div>\n                    <IoIosClose className=\"close-icon\" onClick={toggleChat} />\n                  </div>\n                </div>\n                <div style={{ padding: \"20px\", flex: \"1\", overflowY: \"auto\" }}>\n                  {messages.map((message, i) => (\n                    <div\n                      key={i}\n                      style={{\n                        display: \"flex\",\n                        justifyContent:\n                          message.type === \"user\" ? \"flex-end\" : \"flex-start\",\n                        margin: \"9px 0\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          padding: \"10px\",\n                          borderRadius: \"8px\",\n                          backgroundColor:\n                            message.type === \"user\" ? \"#A0192A\" : \"#f0f0f0\",\n                          color: message.type === \"user\" ? \"white\" : \"black\",\n                          textAlign: message.type === \"user\" ? \"right\" : \"left\",\n                          maxWidth: \"calc(100% - 100px)\",\n                          wordWrap: \"break-word\",\n                          whiteSpace: \"pre-line\",\n                        }}\n                      >\n                        {message.text}\n                      </div>\n                    </div>\n                  ))}\n                  <div ref={messagesEndRef} />\n                </div>\n                <form onSubmit={submitMessage} className=\"chat-input-form\">\n                  <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    disabled={isInputDisabled}\n                    className=\"chat-input\"\n                  />\n                  <button\n                    type=\"submit\"\n                    disabled={isInputDisabled}\n                    className=\"chat-send-button\"\n                  >\n                    Send\n                  </button>\n                </form>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // 추가\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport Chat from \"./Chat.js\";\nimport './styles/home.css';\n\nconst HomePage = () => {\n  const [clubDataList, setClubDataList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredClubData, setFilteredClubData] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [announcements, setAnnouncements] = useState([]);\n  \n  \n\n  useEffect(() => {\n    // Firestore 데이터 가져오기\n    const firestore = firebase.firestore();\n    const clubInfoRef = firestore.collection('ClubInfo');\n    const categoryRef = firestore.collection('categoryManage');\n\n    clubInfoRef.get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n        setClubDataList(data);\n        setFilteredClubData(data); // 최초에 모든 동아리 데이터를 보여줍니다.\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log('Error getting documents:', error);\n      });\n\n    categoryRef.doc(\"category\").get().then((categorydoc) => {\n      if (categorydoc.exists) {\n        // 문서가 존재할 경우 문서 데이터를 가져와서 categories 상태 업데이트\n        setCategories(Object.keys(categorydoc.data()));\n      } else {\n        console.log(\"해당 문서를 찾을 수 없습니다.\");\n      }\n    })\n      .catch((error) => {\n        console.log(\"데이터를 가져오는 중 오류가 발생했습니다.\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    // 검색어가 변경될 때마다 동아리 데이터를 필터링하여 업데이트합니다.\n    // 검색어 또는 선택된 카테고리가 변경될 때마다 동아리 데이터를 필터링하여 업데이트합니다.\n    setFilteredClubData([]);\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    const lowerSelectedCategory = selectedCategory.toLowerCase();\n\n    const filteredData = clubDataList.filter((club) => {\n      // const lowerSearchTerm = searchTerm.toLowerCase();\n      const lowerClubName = club.club_name ? club.club_name.toLowerCase() : '';\n      const lowerCategory = club.category ? club.category.toLowerCase() : '';\n      const lowerMeetingTime = club.meeting_date ? club.meeting_date.toLowerCase() : '';\n\n      // 검색어와 선택된 카테고리가 모두 없는 경우는 모든 동아리를 보여줍니다.\n      if (!lowerSearchTerm && !lowerSelectedCategory) {\n        return true;\n      }\n\n      // 검색어가 club.name 또는 club.category에 포함된 경우에만 필터링합니다.\n      // 검색어와 선택된 카테고리 중 하나에 포함된 경우에만 필터링합니다.\n\n\n      return (\n        (lowerSearchTerm && (lowerClubName.includes(lowerSearchTerm) || lowerCategory.includes(lowerSearchTerm) || lowerMeetingTime.includes(lowerSearchTerm))) ||\n        (lowerSelectedCategory && lowerCategory.includes(lowerSelectedCategory))\n      );\n    });\n\n    setFilteredClubData(filteredData);\n    console.log(filteredClubData);\n  }, [clubDataList, searchTerm, selectedCategory]);\n\n  const handleSearchTermChange = (event) => {\n    setSelectedCategory('');\n    setSearchTerm(event.target.value);\n    // searchTerm이 변경되면 selectedCategory 초기화\n  };\n\n  const handleCategoryChange = (event) => {\n    setSearchTerm('');\n    setSelectedCategory(event.target.value);\n    // selectedCategory가 변경되면 searchTerm 초기화\n  };\n\n  useEffect(() => {\n    // Firestore의 Announcement 콜렉션에서 데이터 가져오기\n    const firestore = firebase.firestore();\n    const announcementRef = firestore.collection('Announcements');\n\n    announcementRef.get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n        setAnnouncements(data);\n      })\n      .catch((error) => {\n        console.log('Error getting documents:', error);\n      });\n  }, []);\n\n  function truncateString(str) {\n    const maxLength = 100;\n  \n    // 문자열이 null이거나 \"N/A\"일 때는 그대로 반환\n    if (!str || str === \"N/A\") {\n      return str;\n    }\n  \n    // 문자열의 길이가 maxLength보다 크면 잘라서 반환\n    if (str.length > maxLength) {\n      return str.substring(0, maxLength) + '...';\n    }\n  \n    // 위의 조건들에 해당하지 않는 경우 원본 문자열 반환\n    return str;\n  }\n  \n\n  return (\n    <div className=\"container-home\">\n      <div className=\"container-announcement\">\n        {announcements.map((announcement, index) => (\n          <div className=\"announcement-data\" key={index}>\n            <li>\n              <h3 className=\"announcement-name\">\n              <Link\n              to={`/announcement`}\n              className=\"announcement list page\">\n              {announcement.announcement_name}\n            </Link>\n                \n              </h3>\n              <p className=\"announcement-description\">\n                {truncateString(announcement.announcement_description)}\n              </p>\n            </li>\n          </div>\n        ))}\n      </div>\n      {/* <div\n            className=\"announcement-data\"\n            key={index}\n            // 애니메이션 시작 지연: 여기서는 항목 수만큼의 지연을 주었습니다.\n            // (전체 애니메이션 지속 시간 / 항목의 수) x 현재 항목의 인덱스\n            style={{ animationDelay: `${10 * index}s` }} \n            ></div> */}\n      <div className=\"container-headline\">\n        <div className=\"headline-title\">\n          SINGAPORE AMERICAN SCHOOL GENERAL CLUBS\n        </div>\n        <div className=\"headline-content\">\n        Browse our comprehensive list of general clubs with up-to-date information.\n        </div>\n      </div>\n\n      <div className=\"container-search-and-select-box\">\n        <div className=\"search-and-select-box\">\n          <input\n            className=\"search-club-input\"\n            type=\"text\"\n            placeholder=\"Search club name\"\n            value={searchTerm}\n            onChange={handleSearchTermChange}\n          />\n          <div className=\"separator\"></div>\n          <select\n            className=\"category-select\"\n            placeholder=\"Select category\"\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n          >\n            <option value=\"\" disabled hidden>\n              Select Category\n            </option>{\" \"}\n            {/* 기본 텍스트 옵션 */}\n            {categories.map((category, index) => (\n              <option key={index} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"container-club-card\">\n        {filteredClubData.map((club, index) => (\n          <div className=\"clubCard\" key={index}>\n            <div className=\"tagBox\">\n        {/* club.hash_tag 값이 \"N/A\"가 아니라면 처리 */}\n        {club.hash_tag !== \"N/A\" && club.hash_tag.split(',').slice(0, 3).map((tag, tagIndex) => (\n          <div key={tagIndex} className=\"hashtag-box\">\n            {tag.trim()}\n          </div>\n        ))}\n      </div>\n            {((club.club_logo)!=\"N/A\") && (\n              <img\n                src={club.club_logo}\n                alt={`${club.club_name} logo`}\n                className=\"clubLogo\"\n              />\n            )}\n            <div className=\"clubcard-club-name\">{club.club_name}</div>\n            <p className=\"clubcard-club-description-category\">{club.category}</p> {/* 클럽 설명 */}\n            <p className=\"clubcard-club-description\">{club.meeting_date}</p> {/* 클럽 설명 */}\n            <Link\n              to={`/clubDetail/${club.club_name}`}\n              className=\"clubDetailLink\"\n            >\n              Details\n            </Link>\n          </div>\n        ))}\n      </div>\n\n      <Chat />\n    </div>\n  );\n};\n\nexport default HomePage;\n","// LoginPage.js\nimport React, { useState, useContext } from \"react\";\nimport { firebase, auth } from \"./firebase\";\nimport './styles/GoogleSignInButton.css';\nimport './styles/Login.css'\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from './AuthProvider';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { isAdmin, setIsAdmin } = useContext(AuthContext);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleIsAdmin = async (email_handle, userDocSnapshot) => {\n    if (userDocSnapshot.data().isSuperUser) {\n      return true;\n    } else {\n      const joinClubCollectionSnapshot = await firebase.firestore().collection('Users').doc(email_handle).collection(\"JoinClub\").get();\n      if (!joinClubCollectionSnapshot.empty) {\n        for (const doc of joinClubCollectionSnapshot.docs) {\n          if (doc.data().user_role === '1') {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  const signInWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n      console.log(result.user);\n\n      const email = result.user.email;\n      const email_handle = email.substring(0, email.lastIndexOf(\"@\"));\n      const domain = email.substring(email.lastIndexOf(\"@\") + 1);\n\n      if (domain !== 'sas.edu.sg') {\n        await auth.signOut();\n        console.log('Only members of the SAS community may access this page. Please log in with sas.edu.sg account!');\n        setErrorMsg('Only members of the SAS community may access this page. Please log in with sas.edu.sg account');\n      } else {\n        const userDocRef = firebase.firestore().collection(\"Users\").doc(email_handle);\n        const userDocSnapshot = await userDocRef.get();\n\n        if (!userDocSnapshot.exists) {\n          await userDocRef.set({\n            email: email,\n            isSuperUser: false,\n          });\n        }\n\n        const isAdminStatus = await handleIsAdmin(email_handle, userDocSnapshot);\n        setIsAdmin(isAdminStatus);\n\n        let { from } = location.state || { from: { pathname: \"/\" } };\n        navigate(from);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\" login-background\">\n    {/* <div><img src=\"/img/saslogo.png\" /></div> */}\n    <div className=\"Title\">\n      Welcome to SAS General Club Portal - CLUBSMATE!\n    </div>\n    <div className=\"googleLoginButton\">\n      <button onClick={signInWithGoogle} className=\"google-btn\" type=\"button\">\n        <span className=\"google-icon-wrapper\">\n          <img className=\"google-icon\"\n            src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google logo\" />\n        </span>\n        <span className=\"google-btn-text\">Sign in with Google</span>\n      </button>\n    </div>\n    {errorMsg && <p>{errorMsg}</p>}\n  </div>\n  );\n};\n\nexport default LoginPage;","import React, { useEffect, useState, useContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"./clubdetail.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../AuthProvider\";\n\nconst ClubDetail = () => {\n  const { club_name } = useParams();\n  const { currentUser } = useContext(AuthContext);\n  const [clubData, setClubData] = useState(null);\n  const [clubEvents, setClubEvents] = useState([]);\n  const emailHandle = currentUser.email.split(\"@\")[0];\n  const userDocRef = firebase.firestore().collection(\"Users\").doc(emailHandle);\n\n  const handleJoin = async () => {\n    const joinClubCollectionRef = userDocRef.collection(\"JoinClub\");\n    const clubDocRef = joinClubCollectionRef.doc(club_name);\n    const clubDocSnapshot = await clubDocRef.get();\n\n    if (!clubDocSnapshot.exists) {\n      try {\n        await clubDocRef.set({\n          club_leader: \"\",\n          user_role: \"0\",\n        });\n        alert(\"성공했습니다!\");\n      } catch (error) {\n        console.error(\"Error writing document: \", error);\n        alert(\"실패했습니다.\");\n      }\n      //추후에, member수 증가시키는 부분 추가해야함.\n    }\n  };\n\n  useEffect(() => {\n    const firestore = firebase.firestore();\n    const clubInfoRef = firestore.collection(\"ClubInfo\").doc(club_name);\n    console.log(club_name);\n\n    clubInfoRef.get().then((querySnapshot) => {\n      if (!querySnapshot.empty) {\n        setClubData(querySnapshot.data());\n        console.log(clubData);\n      } else {\n      }\n    });\n  }, [club_name]);\n\n  useEffect(() => {\n    const fetchClubEvents = async () => {\n      const eventsCollection = firebase.firestore().collection(\"Events\");\n      let allEvents = [];\n\n      try {\n        const clubEventsSnapshot = await eventsCollection\n          .doc(club_name)\n          .collection(\"ClubEvents\")\n          .get();\n\n        clubEventsSnapshot.forEach((eventDoc) => {\n          let eventData = eventDoc.data();\n          eventData.id = eventDoc.id;\n          allEvents.push(eventData);\n        });\n      } catch (error) {\n        console.log(`Error getting events for club ID ${club_name}:`, error);\n      }\n\n      setClubEvents(allEvents);\n    };\n\n    fetchClubEvents();\n  }, [club_name]);\n\n  console.log(clubEvents);\n\n  if (!clubData) {\n    return <div>Loading...</div>;\n  }\n  let Instagram = null;\n  if (\n    clubData.social_media_links &&\n    clubData.social_media_links.split(\"@\")[0] === \"Instagram: \"\n  ) {\n    const sns_links = clubData.social_media_links.split(\"@\")[1];\n    console.log(sns_links);\n    Instagram = \"https://www.instagram.com/\" + sns_links;\n  }\n  const hashTags =\n    clubData && clubData.hash_tag ? clubData.hash_tag.split(\",\") : [];\n\n  return (\n    <div className=\"container-club-detail\">\n      <div className=\"left-section\">\n        <div className=\"clublogoBox\">\n          <img\n            src={\n              clubData.club_logo === \"N/A\"\n                ? \"/clublogo.png\"\n                : clubData.club_logo\n            }\n            alt={`${clubData.club_name} logo`}\n            className=\"clubLogo\"\n          />\n        </div>\n        <div className=\"linksBox\">\n          <div className=\"joinButton\" type=\"button\" onClick={handleJoin}>\n            <div className=\"text-section\">Join</div>\n            <div className=\"right-icon-section\">\n              <img\n                src=\"/img/caret-right-fill-white.svg\"\n                className=\"arrow-icon\"\n              />\n            </div>\n          </div>\n          {Instagram && (\n            <div className=\"linkButton\" type=\"button\">\n              <a\n                href={Instagram}\n                role=\"button\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"no-underline text-section\"\n              >\n                Instagram\n              </a>\n              <div className=\"right-icon-section\">\n                <img\n                  src=\"/img/caret-right-fill-blue.svg\"\n                  className=\"arrow-icon\"\n                />\n              </div>\n            </div>\n          )}\n\n          <div className=\"linkButton\" type=\"button\">\n            <a\n              href={Instagram}\n              role=\"button\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"no-underline text-section\"\n            >\n              Contact Us\n            </a>\n            <div className=\"right-icon-section\">\n              <img\n                src=\"/img/caret-right-fill-blue.svg\"\n                className=\"arrow-icon\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"right-section\">\n        <div className=\"informationBox\">\n          <div className=\"tagBox\">\n            {hashTags.map((tag) => (\n              <div key={tag} className=\"hashtag-box\">\n                {tag.trim()} {/* 공백 제거 */}\n              </div>\n            ))}\n            <div className=\"categoryBox\">\n              <div className=\"category\">{clubData.category}</div>\n            </div>\n          </div>\n          <div className=\"titleBox\">{clubData.club_name}</div>\n          <div className=\"memberBox d-flex col\">\n            <div className=\"sponsor\">Sponsor Teacher: {clubData.sponsor}</div>\n            <div className=\"members\">\n              Officer: {clubData.club_leader}\n            </div>\n          </div>\n          <div className=\"descBox\">\n            Club Description: {clubData.description}\n          </div>\n          <div className=\"missionBox\">Mission: {clubData.mission}</div>\n        </div>\n        <div className=\"activityBox\">\n          <div className=\"pastBox\">\n            <div className=\"pastTitle\">Past Activities</div>\n            <div className=\"pastContent\">{clubData.past_activities}</div>\n          </div>\n          <div className=\"scheduleBox\">\n            <div className=\"meetingBox\">\n              <div className=\" d-flex col justify-space-between\">\n                <div className=\"subTitle\"> Meeting Details</div>\n                <div className=\"calendar-button\" type=\"button\">\n                  Add to Calendar\n                </div>\n              </div>\n              <div className=\"meetingDetailBox\">\n                <div className=\"d-flex col\">\n                  <div className=\"detailTitle\">Meeting Frequency</div>\n                  <div className=\"detailContent\">\n                    {clubData.meeting_frequency}\n                  </div>\n                </div>\n                <div className=\"d-flex col\">\n                  <div className=\"detailTitle\">Meeting Time</div>\n                  <div className=\"detailContent\">{clubData.meeting_date}</div>\n                </div>\n                <div className=\"d-flex col\">\n                  <div className=\"detailTitle\">Meeting Location</div>\n                  <div className=\"detailContent\">{clubData.location}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"eventBox\">\n              <div className=\" d-flex col justify-space-between\">\n                <div className=\"subTitle\"> Club Upcoming Events</div>\n                <div className=\"calendar-button\" type=\"button\">\n                  Add to Calendar\n                </div>\n              </div>\n              <div className=\"eventDetailBox\">\n                {clubEvents.length > 0 ? (\n                  clubEvents.map((event) => (\n                    <div key={event.id} className=\"individualEvent\">\n                      <div className=\"d-flex col\">\n                        <div className=\"detailTitle\">Event Name</div>\n                        <div className=\"detailContent\">{event.event_name}</div>\n                      </div>\n                      <div className=\"d-flex col\">\n                        <div className=\"detailTitle\">Event Date</div>\n                        <div className=\"detailContent\">{event.start_date}</div>\n                      </div>\n\n                      <div className=\"d-flex col\">\n                        <div className=\"detailTitle\">Event Location</div>\n                        <div className=\"detailContent\">{event.location}</div>\n                      </div>\n                      <div className=\"d-flex col\">\n                        <div className=\"detailTitle\">Event Description</div>\n                        <div className=\"detailContent\">\n                          {event.event_Description}\n                        </div>\n                      </div>\n                      <div className=\"detailLinkBox\">\n                        <Link\n                          className=\"detailLink\"\n                          to={`/eventDetail/${clubData.club_name}/${event.event_name}`}\n                        >\n                          Go to event details {\">\"}\n                        </Link>{\" \"}\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <p>No upcoming events for this club.</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClubDetail;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"./eventdetail.css\";\nimport { useParams } from \"react-router-dom\";\n\nconst EventDetail = () => {\n  // clubName을 props로 받음\n  const { club_name, event_name } = useParams();\n  const [clubData, setClubData] = useState(null);\n  const [clubEvents, setClubEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchClubData = async () => {\n      const firestore = firebase.firestore();\n      const clubInfoRef = firestore.collection(\"ClubInfo\").doc(club_name);\n\n      try {\n        const clubDataSnapshot = await clubInfoRef.get();\n        if (clubDataSnapshot.exists) {\n          setClubData(clubDataSnapshot.data());\n        } else {\n          console.log(\"*** no clubData.\");\n          setClubData(null);\n        }\n      } catch (error) {\n        console.log(`Error getting club data for ${club_name}:`, error);\n        setClubData(null);\n      }\n      setIsLoading(false);\n    };\n\n    fetchClubData();\n  }, [club_name]);\n\n  useEffect(() => {\n    const fetchClubEvent = async () => {\n      const eventsCollection = firebase.firestore().collection(\"Events\");\n\n      try {\n        const eventDoc = await eventsCollection\n          .doc(club_name)\n          .collection(\"ClubEvents\")\n          .doc(event_name)\n          .get();\n\n        if (eventDoc.exists) {\n          // 해당 이벤트 문서가 있으면 해당 이벤트 정보를 가져와서 setClubEvents로 상태 업데이트\n          setClubEvents([eventDoc.data()]);\n        } else {\n          // 해당 이벤트 문서가 없으면 처리 (예: 에러 메시지 표시 등)\n          setClubEvents([]);\n        }\n      } catch (error) {\n        console.log(\n          `Error getting event ${event_name} for club ${club_name}:`,\n          error\n        );\n        setClubEvents([]);\n      }\n    };\n\n    fetchClubEvent();\n  }, [club_name, event_name]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  const hashTags =\n    clubData && clubData.hash_tag ? clubData.hash_tag.split(\",\") : [];\n  const startDate =\n    clubEvents && clubEvents.length > 0 ? clubEvents[0].start_date : \"None\";\n  const location =\n    clubEvents && clubEvents.length > 0 ? clubEvents[0].location : \"None\";\n  const eventDescription =\n    clubEvents && clubEvents.length > 0\n      ? clubEvents[0].event_description\n      : \"None\";\n  const applyLink =\n    clubEvents && clubEvents.length > 0 ? clubEvents[0].apply_link : \"\";\n  const inquiryLink =\n    clubEvents && clubEvents.length > 0 ? clubEvents[0].contact_link : \"\";\n\n  const handleApplyNowClick = () => {\n    if (applyLink !== \"\") {\n      const absoluteURL = new URL(applyLink, window.location.origin);\n      window.open(absoluteURL.href);\n    }\n  };\n\n  console.log(\"clubEvents : \", clubEvents);\n  console.log(\"startDate : \", startDate);\n\n  return (\n    <div className=\"container-event-detail\">\n      <div className=\"event-box-section\">\n        <div className=\"event-left-info-section\">\n          <div className=\"event-logo-section\">\n            {/* club logo */}\n            <img\n              src={\n                clubData.club_logo === \"N/A\"\n                  ? \"/img/clubLogo_v2.png\"\n                  : clubData.club_logo\n              }\n              alt={`${clubData.club_name} logo`}\n              className=\"clubLogo\"\n            />\n          </div>\n          <div className=\"event-ask-section\">\n            {applyLink !== \"\" && (\n              <div className=\"apply-button\" onClick={handleApplyNowClick}>\n                <div className=\"text-section\">apply now</div>\n                <div className=\"right-icon-section\">\n                  <img\n                    src=\"/img/caret-right-fill-white.svg\"\n                    className=\"arrow-icon\"\n                  />\n                </div>\n              </div>\n            )}\n            <div className=\"inquiry-button\" onClick={\"\"}>\n              <div className=\"text-section\">inquiry</div>\n              <div className=\"right-icon-section\">\n                <img\n                  src=\"/img/caret-right-fill-blue.svg\"\n                  className=\"arrow-icon\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"event-right-description-section\">\n          <div className=\"event-right-first-header-section\">\n            <div className=\"hashtag-box-section\">\n              {hashTags.map((tag) => (\n                <div key={tag} className=\"hashtag-box\">\n                  {tag.trim()} {/* 공백 제거 */}\n                </div>\n              ))}\n            </div>\n            <div className=\"additional-info-section\">\n              <div className=\"event-holder-button\">{club_name}</div>\n              <div className=\"calendar-button\">Add to Calendar</div>\n            </div>\n          </div>\n          <div className=\"event-right-headline-section\">{event_name}</div>\n          <div className=\"event-right-sub-info-section\">\n            <img src=\"/img/Icon_date.svg\" className=\"sub-info-icon\" />\n            <div className=\"sub-info-datetime-text\">{startDate}</div>\n            <img src=\"/img/locationIcon.svg\" className=\"sub-info-icon\" />\n            <div className=\"sub-info-location-text\">{location}</div>\n          </div>\n          <div className=\"event-right-description-text-section\">\n            {eventDescription}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventDetail;\n","import React, { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../AuthProvider\";\nimport Logout from \"../logout/Logout\";\nimport firebase from \"firebase/app\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate(\"/login\");\n      });\n  };\n\n  // 로그인 한 사용자에게만 Navbar를 보여줍니다.\n  if (currentUser) {\n    return (\n      <nav className=\"fixed-top pt-0\">\n        <div className=\"navAlign\">\n          <a href=\"/\" role=\"button\">\n            <img className=\"logo\" src=\"/eagleLogo.svg\" alt=\"clubsmate logo\" />\n          </a>\n          <div className=\"menu-tab\">\n            <div className=\"menu-items\">\n              <Link to=\"/\" className=\"nav-item\">\n                Home\n              </Link>\n              <Link to=\"/announcement\" className=\"nav-item\">\n                Announcements\n              </Link>\n              <a href=\"mailto:eaglecouncil@sas.edu.sg\" className=\"nav-item\">\n                Contact Us\n              </a>\n            </div>\n          </div>\n\n          <div className=\"user-controls\">\n            <div className=\"nav-link-box\">\n              <Link\n                to=\"/mypage\"\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                My Page\n              </Link>\n            </div>\n            <div className=\"nav-link-box\" onClick={signOut}>\n              Sign out\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  } else {\n    // 로그인하지 않은 사용자에게는 아무것도 보여주지 않습니다.\n    return null;\n  }\n}\n\nexport default Navbar;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext } from \"./AuthProvider\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n// import Modal from \"./Modal\";\nimport ReactModal from \"react-modal\";\nimport \"./styles/AdminPage.css\";\nimport { FaSyncAlt } from \"react-icons/fa\";\n\nconst AdminPage = () => {\n  const db = firebase.firestore();\n\n  const { currentUser } = useContext(AuthContext);\n  const [selectedClub, setSelectedClub] = useState(null);\n  const [clubs, setClubs] = useState([]);\n  const [clubInfo, setClubInfo] = useState(null);\n  const [isClubModalOpen, setClubModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [eventInfo, setEventInfo] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [isEventModalOpen, setEventModalOpen] = useState(false);\n  const [selectedAnnouncement, setSelectedAnnouncement] = useState(null);\n  const [announcements, setAnnouncements] = useState([]);\n  const [announcementInfo, setAnnouncementInfo] = useState(null); // 이 부분 추가\n  const [isAnnouncementModalOpen, setAnnouncementModalOpen] = useState(false);\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\n  const [selectedHashTags, setSelectedHashTags] = useState([]);\n\n  const [isSuperUser, setIsSuperUser] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [isRequestApproved, setIsRequestApproved] = useState(false);\n  const [approvedRequests, setApprovedRequests] = useState([]);\n\n  const [newClubInfo, setNewClubInfo] = useState({\n    club_name: \"\",\n    category: \"\",\n    club_logo: \"\",\n    members: \"\",\n    meeting_frequency: \"\",\n    meeting_date: \"\",\n    location: \"\",\n    sponsor: \"\",\n    mission: \"\",\n    past_activities: \"\",\n    social_media_links: \"\",\n    club_leader: \"\",\n    additional_info: \"\",\n    description: \"\",\n    hash_tag: \"\",\n  });\n\n  const [newAnnouncement, setNewAnnouncement] = useState({\n    announcement_description: \"\",\n    announcement_name: \"\",\n    apply_link: \"\",\n    contact_link: \"\",\n    end_date: \"\",\n    manager_name: \"\",\n    start_date: \"\",\n    hash_tag: \"\",\n    location: \"\",\n  });\n\n  const hashTagOptions = [\n    \"Creativity\",\n    \"math\",\n    \"competition\",\n    \"Business Skills\",\n    \"Environmental Issues\",\n    \"Teaching\",\n    \"gender equality\",\n    \"health and wellness\",\n    \"culture\",\n    \"Research\",\n    \"music\",\n    \"writing\",\n    \"debate\",\n    \"DEI\",\n    \"games\",\n    \"Science\",\n    \"Hands-On Experiments\",\n    \"Technology\",\n  ];\n\n  const handleModalInputChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"hash_tag\") {\n      let currentHashTags = newClubInfo.hash_tag\n        ? newClubInfo.hash_tag.split(\",\")\n        : [];\n\n      if (event.target.checked) {\n        if (currentHashTags.length < 3) {\n          currentHashTags.push(value);\n        } else {\n          alert(\"최대 3개까지만 선택 가능합니다.\");\n          event.target.checked = false;\n          return;\n        }\n      } else {\n        currentHashTags = currentHashTags.filter((tag) => tag !== value);\n      }\n      setNewClubInfo((prev) => ({\n        ...prev,\n        hash_tag: currentHashTags.join(\",\"),\n      }));\n    } else {\n      setNewClubInfo((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleModalCreateClub = async () => {\n    try {\n      await db\n        .collection(\"ClubInfo\")\n        .doc(newClubInfo.club_name)\n        .set(newClubInfo);\n      const email_handle = currentUser.email.split(\"@\")[0];\n      await db\n        .collection(\"Users\")\n        .doc(email_handle)\n        .collection(\"JoinClub\")\n        .doc(newClubInfo.club_name)\n        .set({\n          club_leader: \"\",\n          user_role: \"1\",\n        });\n\n      setClubModalOpen(false);\n    } catch (error) {\n      console.error(\"Error creating new club: \", error);\n    }\n  };\n\n  const [newEventInfo, setNewEventInfo] = useState({\n    event_name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    event_description: \"\",\n    club_name: \"\",\n    contact_link: \"\",\n    apply_link: \"\",\n    location: \"\",\n  });\n\n  const handleEventModalInputChange = (event) => {\n    setNewEventInfo({\n      ...newEventInfo,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleEventModalCreateEvent = async () => {\n    try {\n      // Check if the document with the selectedClub ID exists\n      const docRef = db.collection(\"Events\").doc(selectedClub);\n      const doc = await docRef.get();\n      if (!doc.exists) {\n        // If the document does not exist, create a new document with the selectedClub ID\n        await docRef.set({});\n      }\n\n      // Create a new event document inside the 'ClubEvents' collection\n      await docRef\n        .collection(\"ClubEvents\")\n        .doc(newEventInfo.event_name)\n        .set(newEventInfo);\n      setEventModalOpen(false);\n    } catch (error) {\n      console.error(\"Error creating new event: \", error);\n    }\n  };\n\n  const eventInfoKeysOrder = [\n    \"event_name\",\n    \"start_date\",\n    \"end_date\",\n    \"event_description\",\n    \"club_name\",\n    \"location\",\n    \"contact_link\",\n    \"apply_link\",\n  ];\n\n  const eventKeyDisplayNames = {\n    event_name: \"Event Name\",\n    start_date: \"Start Date\",\n    end_date: \"End Date\",\n    event_description: \"Event Description\",\n    club_name: \"Club Name\",\n    location: \"Location\",\n    contact_link: \"Contact Link\",\n    apply_link: \"Apply Link\",\n  };\n\n  const clubInfoKeysOrder = [\n    \"club_name\",\n    \"category\",\n    \"club_logo\",\n    \"members\",\n    \"meeting_frequency\",\n    \"meeting_date\",\n    \"location\",\n    \"sponsor\",\n    \"mission\",\n    \"past_activities\",\n    \"social_media_links\",\n    \"club_leader\",\n    \"additional_info\",\n    \"description\",\n    \"hash_tag\",\n  ];\n\n  const keyDisplayNames = {\n    club_name: \"Club Name\",\n    category: \"Category\",\n    club_logo: \"Club Logo\",\n    members: \"Club Members\",\n    meeting_frequency: \"Weekly Meeting Frequency\",\n    meeting_date: \"Weekly Meeting Time\",\n    location: \"Club Location\",\n    sponsor: \"Club Sponsor\",\n    mission: \"Club Mission Statement\",\n    past_activities: \"Club Past Activities\",\n    social_media_links: \"Social Media Links\",\n    club_leader: \"Club Leader\",\n    additional_info: \"Additional Information\",\n    description: \"Club Description\",\n    hash_tag: \"Club Hashtag (You can choose maximum 3 hashtags)\",\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      const email_handle = currentUser.email.split(\"@\")[0];\n      firebase\n        .firestore()\n        .collection(\"Users\")\n        .doc(email_handle)\n        .get()\n        .then((doc) => {\n          if (doc.exists && doc.data().isSuperUser) {\n            setIsSuperUser(true);\n            firebase\n              .firestore()\n              .collection(\"ClubInfo\")\n              .get()\n              .then((querySnapshot) => {\n                let clubsArray = [];\n                querySnapshot.forEach((doc) => {\n                  clubsArray.push(doc.id);\n                });\n                setClubs(clubsArray);\n              });\n          } else {\n            firebase\n              .firestore()\n              .collection(\"Users\")\n              .doc(email_handle)\n              .collection(\"JoinClub\")\n              .where(\"user_role\", \"in\", [\"1\", \"2\"])\n              .get()\n              .then((querySnapshot) => {\n                let clubsArray = [];\n                querySnapshot.forEach((doc) => {\n                  clubsArray.push(doc.id);\n                });\n                setClubs(clubsArray);\n              });\n          }\n        });\n    } else {\n      setIsSuperUser(false);\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (selectedClub) {\n      firebase\n        .firestore()\n        .collection(\"ClubInfo\")\n        .doc(selectedClub)\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            setClubInfo(doc.data());\n          }\n        });\n    }\n  }, [selectedClub]);\n\n  useEffect(() => {\n    if (selectedClub) {\n      const docRef = db.collection(\"Events\").doc(selectedClub);\n\n      const unsubscribe = docRef\n        .collection(\"ClubEvents\")\n        .onSnapshot((querySnapshot) => {\n          let eventsArray = [];\n          querySnapshot.forEach((doc) => {\n            const data = doc.data();\n            if (\n              data.start_date &&\n              typeof data.start_date.toDate === \"function\"\n            ) {\n              data.start_date = data.start_date.toDate().toISOString();\n            } else {\n              data.start_date = \"None\";\n            }\n            if (data.end_date && typeof data.end_date.toDate === \"function\") {\n              data.end_date = data.end_date.toDate().toISOString();\n            } else {\n              data.end_date = \"None\";\n            }\n            eventsArray.push({ ...data, id: doc.id });\n          });\n          setEvents(eventsArray);\n        });\n      // Clean up the subscription\n      return () => unsubscribe();\n    }\n  }, [selectedClub, db]);\n\n  useEffect(() => {\n    if (selectedEvent) {\n      const docRef = db.collection(\"Events\").doc(selectedClub);\n      docRef\n        .collection(\"ClubEvents\")\n        .doc(selectedEvent)\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            setEventInfo(doc.data());\n          }\n        });\n    }\n  }, [selectedEvent, selectedClub, db]);\n\n  useEffect(() => {\n    // 'Announcements' 컬렉션에 바로 존재하는 문서들 가져오기\n    const fetchAnnouncements = async () => {\n      try {\n        const querySnapshot = await firebase\n          .firestore()\n          .collection(\"Announcements\")\n          .get();\n        console.log(\"querySnapshot: \", querySnapshot);\n        const announcementsArray = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setAnnouncements(announcementsArray);\n      } catch (error) {\n        console.error(\"Error fetching announcements: \", error);\n      }\n    };\n\n    fetchAnnouncements();\n  }, []);\n\n  useEffect(() => {\n    // RequestAuthority 컬렉션의 모든 문서들을 가져옵니다.\n    const getRequests = async () => {\n      try {\n        const querySnapshot = await firebase\n          .firestore()\n          .collection(\"RequestAuthority\")\n          .get();\n        const requestList = [];\n\n        querySnapshot.forEach((doc) => {\n          // 각 문서에서 confirm_flag가 false인 RequestInfo 컬렉션의 문서들을 가져옴\n          const requestInfoRef = doc.ref\n            .collection(\"RequestInfo\")\n            .where(\"confirm_flag\", \"==\", false);\n          requestInfoRef.get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              // 가져온 문서들을 requestList에 추가합니다.\n              requestList.push({\n                emailHandle: doc.ref.parent.parent.id, // userEmail을 AuthorityRequest 컬렉션의 문서 ID로 사용\n                clubName: doc.id, // clubName을 RequestInfo 컬렉션의 문서 ID로 사용\n                confirmFlag: doc.data().confirm_flag,\n                confirmedTimestamp: doc.data().confirmed_timestamp,\n                currentRole: doc.data().current_role,\n                requestClubLeader: doc.data().request_club_leader,\n                requestRole: doc.data().request_role,\n                requestTimestamp: doc.data().request_timestamp,\n              });\n            });\n            setRequests(requestList);\n          });\n        });\n      } catch (error) {\n        console.error(\"*** Request error raised:\", error);\n      }\n    };\n\n    getRequests();\n  }, []);\n\n  const handleSelectChange = (e) => {\n    setSelectedClub(e.target.value);\n  };\n\n  const handleInputChange = (e) => {\n    setClubInfo({ ...clubInfo, [e.target.name]: e.target.value });\n  };\n\n  const handleUpdate = () => {\n    if (selectedClub && clubInfo) {\n      firebase\n        .firestore()\n        .collection(\"ClubInfo\")\n        .doc(selectedClub)\n        .update(clubInfo)\n        .then(() => {\n          console.log(\"Document successfully updated!\");\n        })\n        .catch((error) => {\n          console.error(\"Error updating document: \", error);\n        });\n    }\n  };\n\n  const handleHashTagChange = (event) => {\n    if (event.target.checked) {\n      if (selectedHashTags.length < 3) {\n        setSelectedHashTags((prev) => [...prev, event.target.value]);\n      } else {\n        alert(\"최대 3개까지만 선택할 수 있습니다.\");\n        event.target.checked = false;\n      }\n    } else {\n      setSelectedHashTags((prev) =>\n        prev.filter((tag) => tag !== event.target.value)\n      );\n    }\n    clubInfo.hash_tag = selectedHashTags.join(\", \"); // 혹은 필요한 형태로 저장\n  };\n\n  const handleEventSelectChange = (e) => {\n    setSelectedEvent(e.target.value);\n    const selectedEvent = events.find((event) => event.id === e.target.value);\n    setEventInfo(selectedEvent);\n  };\n\n  const handleEventInputChange = (e) => {\n    setEventInfo({ ...eventInfo, [e.target.name]: e.target.value });\n    console.log(\"2. eventInfo:\", eventInfo);\n  };\n\n  const handleEventUpdate = () => {\n    if (selectedEvent && eventInfo) {\n      const docRef = db.collection(\"Events\").doc(selectedClub);\n\n      docRef\n        .collection(\"ClubEvents\")\n        .doc(selectedEvent)\n        .update(eventInfo)\n        .then(() => {\n          console.log(\"Event document successfully updated!\");\n        })\n        .catch((error) => {\n          console.error(\"Error updating event document: \", error);\n        });\n    }\n  };\n\n  const handleAnnouncementModalInputChange = (event) => {\n    setNewAnnouncement({\n      ...newAnnouncement,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleCreateAnnouncement = async () => {\n    try {\n      await db.collection(\"Announcements\").add(newAnnouncement);\n      setAnnouncementModalOpen(false);\n    } catch (error) {\n      console.error(\"Error creating new announcement: \", error);\n    }\n  };\n\n  const handleAnnouncementSelectChange = (e) => {\n    const announcementId = e.target.value;\n    if (announcementId) {\n      setSelectedAnnouncement(announcementId);\n      const selectedAnnouncement = announcements.find(\n        (announcement) => announcement.id === announcementId\n      );\n      if (selectedAnnouncement) {\n        setAnnouncementInfo(selectedAnnouncement);\n      }\n      setShowUpdateButton(true);\n    } else {\n      setSelectedAnnouncement(null);\n      setAnnouncementInfo(null);\n      setShowUpdateButton(false);\n    }\n  };\n\n  const updateAnnouncementInfo = async () => {\n    try {\n      if (selectedAnnouncement && announcementInfo) {\n        await db\n          .collection(\"Announcements\")\n          .doc(selectedAnnouncement)\n          .update(announcementInfo);\n        console.log(\"Announcement document successfully updated!\");\n      }\n    } catch (error) {\n      console.error(\"Error updating announcement document: \", error);\n    }\n  };\n\n  const handleAnnouncementInputChange = (event) => {\n    const { name, value } = event.target;\n    setAnnouncementInfo((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleApproveRequest = async (request) => {\n    try {\n      // Users 컬렉션에서 Email Handle을 문서 ID로 하는 문서를 찾아서 JoinClub 컬렉션 안에서 Club Name을 문서 ID로 하는 문서를 업데이트시킴\n      await firebase\n        .firestore()\n        .collection(\"Users\")\n        .doc(request.emailHandle)\n        .collection(\"JoinClub\")\n        .doc(request.clubName)\n        .update({\n          user_role: request.requestRole, // Request User Role 값으로 업데이트\n          club_leader: request.requestClubLeader, // Request Club Leader 값으로 업데이트\n        });\n\n      // RequestInfo 컬렉션의 해당 문서를 업데이트\n      await firebase\n        .firestore()\n        .collection(\"RequestAuthority\")\n        .doc(request.emailHandle)\n        .collection(\"RequestInfo\")\n        .doc(request.clubName)\n        .update({\n          confirm_flag: true, // confirm_flag를 true로 업데이트\n          confirmed_timestamp: new Date().toString(), // 현재 시간을 문자열로 변환하여 confirmed_timestamp로 업데이트\n          current_role: request.requestRole, // Request User Role 값으로 업데이트\n        });\n      setIsRequestApproved(true);\n      setApprovedRequests((prev) => [...prev, request.emailHandle]);\n      console.log(\">>> Document insertion completed\");\n    } catch (error) {\n      setIsRequestApproved(false);\n      console.error(\"Request Approve 오류:\", error);\n    }\n  };\n\n  const fetchRequests = async () => {\n    try {\n      const querySnapshot = await firebase\n        .firestore()\n        .collection(\"RequestAuthority\")\n        .get();\n      const requestList = [];\n\n      querySnapshot.forEach((doc) => {\n        const requestInfoRef = doc.ref\n          .collection(\"RequestInfo\")\n          .where(\"confirm_flag\", \"==\", false);\n        requestInfoRef.get().then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            requestList.push({\n              emailHandle: doc.ref.parent.parent.id,\n              clubName: doc.id,\n              confirmFlag: doc.data().confirm_flag,\n              confirmedTimestamp: doc.data().confirmed_timestamp,\n              currentRole: doc.data().current_role,\n              requestClubLeader: doc.data().request_club_leader,\n              requestRole: doc.data().request_role,\n              requestTimestamp: doc.data().request_timestamp,\n            });\n          });\n          setRequests(requestList);\n          console.log(\">>> refresh success\");\n        });\n      });\n    } catch (error) {\n      console.error(\"*** Request error raised:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchRequests();\n  }, []);\n\n  const handleRefreshTable = () => {\n    // 새로고침 버튼 클릭 시, 테이블 데이터를 다시 불러와서 테이블 정보를 갱신\n    fetchRequests();\n  };\n\n  const handleLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log(\"User signed out successfully.\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing out: \", error);\n      });\n  };\n\n  // 인풋 박스의 스타일 동적으로 설정\n  const setInputWidth = () => {\n    const input = document.getElementById(\"my-input\");\n    if (input) {\n      input.style.width = \"100%\"; // 화면 전체 가로 길이로 늘리기\n    }\n  };\n\n  const handleCreateRequest = async () => {\n    try {\n      const emailHandle = \"maillard.lee\"; // 여기에 로그인한 사용자의 이메일에서 '@'을 기준으로 앞에 있는 문자열(email handle)을 가져오는 코드를 추가해야 함.\n      const clubName = \"Bio Lab\"; // 여기에 권한 신청하려는 클럽 이름을 저장\n      const requestData = {\n        confirm_flag: false,\n        confirmed_timestamp: null,\n        current_role: \"0\",\n        request_club_leader: \"Vice President\",\n        request_role: \"1\",\n        request_timestamp: new Date().toString(),\n      };\n\n      // RequestAuthority 컬렉션 안의 해당 사용자의 문서에 RequestInfo 컬렉션을 추가\n      const userRequestDocRef = firebase\n        .firestore()\n        .collection(\"RequestAuthority\")\n        .doc(emailHandle);\n      const requestInfoDocRef = userRequestDocRef\n        .collection(\"RequestInfo\")\n        .doc(clubName);\n\n      // 먼저 문서를 읽어옴\n      const userRequestDoc = await userRequestDocRef.get();\n      const requestInfoDoc = await requestInfoDocRef.get();\n\n      await firebase.firestore().runTransaction(async (transaction) => {\n        if (!userRequestDoc.exists) {\n          transaction.set(userRequestDocRef, {});\n        }\n        if (!requestInfoDoc.exists) {\n          transaction.set(requestInfoDocRef, requestData);\n        }\n      });\n\n      // Users 컬렉션에서 해당 emailHandle을 문서ID로 하는 문서를 가져오기\n      const userDocRef = firebase\n        .firestore()\n        .collection(\"Users\")\n        .doc(emailHandle);\n      const userDocSnapshot = await userDocRef.get();\n\n      // 해당 문서가 존재하지 않으면 Users 컬렉션과 JoinClub 컬렉션에 문서를 생성\n      if (!userDocSnapshot.exists) {\n        await userDocRef.set({});\n        await userDocRef.collection(\"JoinClub\").doc(clubName).set({\n          club_leader: \"\",\n          user_role: \"0\",\n        });\n      } else {\n        // JoinClub 컬렉션 안에서 해당 clubName을 문서 ID로 하는 문서를 가져오기\n        const clubDocRef = userDocRef.collection(\"JoinClub\").doc(clubName);\n        const clubDocSnapshot = await clubDocRef.get();\n\n        // 해당 문서가 존재하지 않으면 JoinClub 컬렉션에 문서를 생성\n        if (!clubDocSnapshot.exists) {\n          await clubDocRef.set({\n            club_leader: \"\",\n            user_role: \"0\",\n          });\n        }\n      }\n\n      console.log(\">>> Document insertion completed\");\n    } catch (error) {\n      console.error(\"*** Request error raised\", error);\n    }\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <div className=\"admin-header\">\n        <h1>SAS Club Manager Admin Page</h1>\n        <div className=\"user-info\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: \"25px\",\n            }}\n          >\n            <h4 style={{ marginRight: \"10px\" }}>You are logged in as</h4>\n            {currentUser.email}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"club-info-section\">\n        <h2 className=\"club-info-header\">\n          {selectedClub ? `1. Club Info: ${selectedClub}` : \"Club Info\"}\n        </h2>\n        <button\n          className=\"create-button\"\n          onClick={() => setClubModalOpen(true)}\n        >\n          Create Club\n        </button>\n        <ReactModal\n          className=\"modal-content\"\n          isOpen={isClubModalOpen}\n          onRequestClose={() => setClubModalOpen(false)}\n        >\n          <div className=\"modal-background-box\">\n            <h2>Create New Club</h2>\n            {clubInfoKeysOrder.map((key) => (\n              <div\n                key={key}\n                className={`input-container ${\n                  key === \"mission\" ||\n                  key === \"past_activities\" ||\n                  key === \"description\" ||\n                  key === \"additional_info\"\n                    ? \"modal-activities\"\n                    : \"\"\n                }`}\n              >\n                <p>\n                  <label>{keyDisplayNames[key] || key}</label>\n                  {key === \"hash_tag\" ? (\n                    hashTagOptions.map((option) => (\n                      <div key={option}>\n                        <input\n                          type=\"checkbox\"\n                          name={key}\n                          value={option}\n                          onChange={handleModalInputChange}\n                          checked={(newClubInfo[key] || \"\")\n                            .split(\",\")\n                            .includes(option)}\n                        />\n                        <label>{option}</label>\n                      </div>\n                    ))\n                  ) : (\n                    <textarea\n                      className=\"input-textarea\"\n                      name={key}\n                      value={newClubInfo[key] || \"\"}\n                      onChange={handleModalInputChange}\n                      required={key === \"club_name\"}\n                      onFocus={setInputWidth}\n                      placeholder={\n                        key === \"club_name\" ? \"'Club Name' is required\" : \"\"\n                      }\n                    />\n                  )}\n                </p>\n              </div>\n            ))}\n            <div className=\"modal-buttons\">\n              <div\n                className=\"modal-create-button\"\n                onClick={handleModalCreateClub}\n                disabled={!newClubInfo.club_name}\n              >\n                Create Club\n              </div>\n              <div\n                className=\"modal-cancel-button\"\n                onClick={() => setClubModalOpen(false)}\n              >\n                Cancel\n              </div>\n            </div>\n          </div>\n        </ReactModal>\n        <p>\n          <select className=\"select\" onChange={handleSelectChange}>\n            <option value=\"\">select club</option>\n            {clubs.map((club) => (\n              <option key={club} value={club}>\n                {club}\n              </option>\n            ))}\n          </select>\n        </p>\n        {selectedClub &&\n          clubInfo &&\n          clubInfoKeysOrder.map((key, index) => (\n            <div\n              key={key}\n              className={`input-container ${\n                key === \"past_activities\" || key === \"mission\"\n                  ? \"activities\"\n                  : \"\"\n              }`}\n            >\n              <p>\n                {index + 1}. {keyDisplayNames[key] || key} :{\" \"}\n                {clubInfo[key] || \"\"}\n              </p>\n\n              {key === \"hash_tag\" ? (\n                hashTagOptions.map((option, idx) => (\n                  <div key={idx}>\n                    <input\n                      type=\"checkbox\"\n                      name={key}\n                      value={option}\n                      onChange={handleHashTagChange}\n                    />\n                    <label>{option}</label>\n                  </div>\n                ))\n              ) : (\n                <textarea\n                  name={key}\n                  value={clubInfo[key] || \"\"}\n                  onChange={handleInputChange}\n                  onFocus={setInputWidth}\n                />\n              )}\n            </div>\n          ))}\n        <p>\n          {selectedClub && clubInfo && (\n            <button className=\"update-button\" onClick={handleUpdate}>\n              Update Club\n            </button>\n          )}\n        </p>\n      </div>\n\n      <div className=\"club-event-section\">\n        <p>\n          <br />\n          <h2>\n            {selectedClub\n              ? `2. Event Info: ${selectedClub}`\n              : \"Event Info (You must select the club first)\"}\n          </h2>\n        </p>\n        <button\n          className=\"create-button\"\n          onClick={() => setEventModalOpen(true)}\n        >\n          Create Event\n        </button>\n        <ReactModal\n          className=\"modal-content\"\n          isOpen={isEventModalOpen}\n          onRequestClose={() => setEventModalOpen(false)}\n        >\n          <div className=\"modal-background-box\">\n            <h2>Create New Event</h2>\n            {eventInfoKeysOrder.map((key) => (\n              <div\n                key={key}\n                className={`input-container ${\n                  key === \"event_description\" ? \"modal-activities\" : \"\"\n                }`}\n              >\n                <p>\n                  <label>{eventKeyDisplayNames[key] || key}</label>\n                  <textarea\n                    className=\"input-textarea\"\n                    name={key}\n                    value={newEventInfo[key] || \"\"}\n                    onChange={handleEventModalInputChange}\n                    required={key === \"event_name\"}\n                    onFocus={setInputWidth}\n                  />\n                </p>\n              </div>\n            ))}\n            <div className=\"modal-buttons\">\n              <div\n                className=\"modal-create-button\"\n                onClick={handleEventModalCreateEvent}\n                disabled={!newEventInfo[\"event_name\"]}\n              >\n                Create Event\n              </div>\n              <div\n                className=\"modal-cancel-button\"\n                onClick={() => setEventModalOpen(false)}\n              >\n                Cancel\n              </div>\n            </div>\n          </div>\n        </ReactModal>\n        <p>\n          <select className=\"select\" onChange={handleEventSelectChange}>\n            <option value=\"\">select event</option>\n            {events.map((event) => (\n              <option key={event.id} value={event.id}>\n                {event.event_name}\n              </option>\n            ))}\n          </select>\n        </p>\n\n        {selectedEvent &&\n          eventInfo &&\n          eventInfoKeysOrder.map((key, index) => (\n            <div\n              key={key}\n              className={`input-container ${\n                key === \"event_description\" ? \"activities\" : \"\"\n              }`}\n            >\n              <p>\n                {index + 1}. {eventKeyDisplayNames[key] || key} :{\" \"}\n              </p>\n              <textarea\n                name={key}\n                value={eventInfo[key] || \"\"}\n                onChange={handleEventInputChange}\n                onFocus={setInputWidth}\n              />\n            </div>\n          ))}\n        <p>\n          {selectedEvent && eventInfo && (\n            <button className=\"update-button\" onClick={handleEventUpdate}>\n              Update Event\n            </button>\n          )}\n        </p>\n      </div>\n\n      <div className=\"announcement-section\">\n        {isSuperUser && (\n          <p>\n            <br />\n            <h2>Announcement Info</h2>\n          </p>\n        )}\n        {isSuperUser && (\n          <button\n            className=\"create-button\"\n            onClick={() => setAnnouncementModalOpen(true)}\n          >\n            Create Announcement\n          </button>\n        )}\n        {/* Announcement 정보 입력용 모달 창 */}\n        <ReactModal\n          className=\"modal-content\"\n          isOpen={isAnnouncementModalOpen}\n          onRequestClose={() => setAnnouncementModalOpen(false)}\n        >\n          <div className=\"modal-background-box\">\n            <h2>Create New Announcement</h2>\n            {Object.keys(newAnnouncement).map((key) => (\n              <div\n                key={key}\n                className={`input-container ${\n                  key === \"announcement_description\" ? \"modal-activities\" : \"\"\n                }`}\n              >\n                <p>\n                  <label>\n                    {key === \"announcement_name\"\n                      ? \"Announcement Title\"\n                      : key === \"announcement_description\"\n                      ? \"Announcement Description\"\n                      : key === \"contact_link\"\n                      ? \"Contact Link\"\n                      : key === \"end_date\"\n                      ? \"End Date\"\n                      : key === \"start_date\"\n                      ? \"Start Date\"\n                      : key === \"apply_link\"\n                      ? \"Apply Link\"\n                      : key === \"manager_name\"\n                      ? \"Manager Name\"\n                      : key.replace(\"_\", \" \")}\n                  </label>\n                  <textarea\n                    className=\"input-textarea\"\n                    name={key}\n                    value={newAnnouncement[key]}\n                    onChange={handleAnnouncementModalInputChange}\n                    required\n                    onFocus={setInputWidth}\n                  />\n                </p>\n              </div>\n            ))}\n            <div className=\"modal-buttons\">\n              <div\n                className=\"modal-create-button\"\n                onClick={handleCreateAnnouncement}\n              >\n                Create Announcement\n              </div>\n              <div\n                className=\"modal-cancel-button\"\n                onClick={() => setAnnouncementModalOpen(false)}\n              >\n                Cancel\n              </div>\n            </div>\n          </div>\n        </ReactModal>\n        {isSuperUser && (\n          <p>\n            <select\n              className=\"select\"\n              onChange={handleAnnouncementSelectChange}\n            >\n              <option value=\"\">select announcement</option>\n              {announcements.map((announcement) => (\n                <option key={announcement.id} value={announcement.id}>\n                  {announcement.announcement_name}\n                </option>\n              ))}\n            </select>\n          </p>\n        )}\n        {selectedAnnouncement !== null && announcementInfo !== null && (\n          <div>\n            <p>Announcement Title: {announcementInfo.announcement_name}</p>\n            <textarea\n              name=\"announcement_name\"\n              value={announcementInfo.announcement_name}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>\n              Announcement Description:{\" \"}\n              {announcementInfo.announcement_description}\n            </p>\n            <textarea\n              className=\"announcement-textarea\"\n              name=\"announcement_description\"\n              value={announcementInfo.announcement_description}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>Start Date: {announcementInfo.start_date}</p>\n            <textarea\n              name=\"start_date\"\n              value={announcementInfo.start_date}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>End Date: {announcementInfo.end_date}</p>\n            <textarea\n              name=\"end_date\"\n              value={announcementInfo.end_date}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>Location: {announcementInfo.location}</p>\n            <textarea\n              name=\"location\"\n              value={announcementInfo.location}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>Manager Name: {announcementInfo.manager_name}</p>\n            <textarea\n              name=\"manager_name\"\n              value={announcementInfo.manager_name}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>Contact Link: {announcementInfo.contact_link}</p>\n            <textarea\n              name=\"contact_link\"\n              value={announcementInfo.contact_link}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>Apply Link: {announcementInfo.apply_link}</p>\n            <textarea\n              name=\"apply_link\"\n              value={announcementInfo.apply_link}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n            <p>Hashtag: {announcementInfo.hash_tag}</p>\n            <textarea\n              name=\"hash_tag\"\n              value={announcementInfo.hash_tag}\n              onChange={handleAnnouncementInputChange}\n              onFocus={setInputWidth}\n            />\n          </div>\n        )}\n        <p>\n          {showUpdateButton && (\n            <button className=\"update-button\" onClick={updateAnnouncementInfo}>\n              Update Announcement\n            </button>\n          )}\n        </p>\n      </div>\n\n      <div className=\"user-section\">\n        {isSuperUser && (\n          <p>\n            <br />\n            <div className=\"sub-headline-section\">\n              <h2>User Request Info</h2>\n            </div>\n          </p>\n        )}\n        <div className=\"request-table-section\">\n          {isSuperUser && (\n            <button class=\"refresh-button\" onClick={handleRefreshTable}>\n              <FaSyncAlt className=\"refresh-icon\" /> refresh table\n            </button>\n          )}\n          {isSuperUser && (\n            <p>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Club Name</th>\n                    <th>Email</th>\n                    <th>Current User Role</th>\n                    <th>Request User Role</th>\n                    <th>Request Club Leader</th>\n                    <th>Request Timestamp</th>\n                    <th>Confirm Flag</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {requests.map((request, index) => (\n                    <tr key={index}>\n                      <td>\n                        <li>{request.clubName}</li>\n                      </td>\n                      <td>\n                        <li>{request.emailHandle}@sas.com</li>\n                      </td>\n                      <td>\n                        <li>{request.currentRole}</li>\n                      </td>\n                      <td>\n                        <li>{request.requestRole}</li>\n                      </td>\n                      <td>\n                        <li>{request.requestClubLeader}</li>\n                      </td>\n                      <td>\n                        <li>{request.requestTimestamp}</li>\n                      </td>\n                      <td>\n                        <li>{request.confirmFlag.toString()}</li>\n                      </td>\n                      <td>\n                        <button\n                          className=\"table-button\"\n                          onClick={() => {\n                            handleApproveRequest(request);\n                          }}\n                          disabled={approvedRequests.includes(\n                            request.emailHandle\n                          )}\n                        >\n                          {approvedRequests.includes(request.emailHandle)\n                            ? \"approved\"\n                            : \"approve\"}\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </p>\n          )}\n        </div>\n\n        {/* 기타 화면 컨텐츠 */}\n        {/* <p>\n          <button className=\"update-button\" onClick={handleCreateRequest}>\n            User Authority Request\n          </button>\n        </p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; //\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"./mypage.css\";\nimport { AuthContext } from \"../../AuthProvider\";\n\nconst MyPage = () => {\n  const { currentUser, isAdmin } = useContext(AuthContext);\n  const emailHandle = currentUser.email.split(\"@\")[0];\n  const [selectedClub, setSelectedClub] = useState(\"\");\n  const [selectedAuth, setSelectedAuth] = useState(\"\");\n  console.log(emailHandle);\n  const [clubDetails, setClubDetails] = useState([]);\n\n  const [clubs, setClubs] = useState([]);\n\n  const userDocRef = firebase.firestore().collection(\"Users\").doc(emailHandle);\n  //const userDocSnapshot = userDocRef.get();\n\n  const handleClubChange = (e) => {\n    setSelectedClub(e.target.value);\n  };\n\n  const handleAuthChange = (e) => {\n    setSelectedAuth(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(\"handleSubmit called\");\n    console.log(`Selected Club: ${selectedClub}`);\n    console.log(`Selected Auth: ${selectedAuth}`);\n\n    // 선택된 클럽 이름과 권한이 빈 문자열이 아닌 경우에만 handleCreateRequest를 호출\n    if (selectedClub && selectedAuth) {\n      handleCreateRequest();\n    } else {\n      alert(\"Please select club name and authority.\");\n    }\n  };\n\n  const handleCreateRequest = async () => {\n    try {\n      const clubName = selectedClub; // 선택한 클럽 이름\n      const requestData = {\n        confirm_flag: false,\n        confirmed_timestamp: null,\n        current_role: \"0\",\n        request_club_leader: selectedAuth, // 선택한 권한\n        request_role: \"1\",\n        request_timestamp: new Date().toString(),\n      };\n\n      // RequestAuthority 컬렉션 안의 해당 사용자의 문서에 RequestInfo 컬렉션을 추가\n      const userRequestDocRef = firebase\n        .firestore()\n        .collection(\"RequestAuthority\")\n        .doc(emailHandle);\n      const requestInfoDocRef = userRequestDocRef\n        .collection(\"RequestInfo\")\n        .doc(clubName);\n\n      // 먼저 문서를 읽어옴\n      const userRequestDoc = await userRequestDocRef.get();\n      const requestInfoDoc = await requestInfoDocRef.get();\n\n      // 트랜잭션을 실행\n      await firebase.firestore().runTransaction(async (transaction) => {\n        // 읽기가 모두 완료되면 트랜잭션 내에서 쓰기를 수행\n        if (!userRequestDoc.exists) {\n          transaction.set(userRequestDocRef, {});\n        }\n        if (!requestInfoDoc.exists) {\n          transaction.set(requestInfoDocRef, requestData);\n        }\n      });\n\n      // 성공적으로 저장되었을 경우\n      alert(\"Requested.\");\n    } catch (error) {\n      // 오류가 발생한 경우\n      console.error(\"Error writing to Firestore:\", error);\n      alert(\" Try again.\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchJoinedClubs = async () => {\n      try {\n        const querySnapshot = await userDocRef.collection(\"JoinClub\").get();\n\n        let joinedClubIds = [];\n        querySnapshot.forEach((doc) => {\n          joinedClubIds.push(doc.id);\n        });\n\n        setClubs(joinedClubIds);\n      } catch (error) {\n        console.log(\"Error getting JoinClub subcollection:\", error);\n      }\n    };\n\n    fetchJoinedClubs();\n  }, [currentUser]);\n\n  useEffect(() => {\n    const fetchClubDetails = async () => {\n      const clubInfoCollection = firebase.firestore().collection(\"ClubInfo\");\n      const clubDetailsArray = [];\n\n      for (const clubId of clubs) {\n        try {\n          const clubDoc = await clubInfoCollection.doc(clubId).get();\n\n          if (clubDoc.exists) {\n            clubDetailsArray.push(clubDoc.data());\n          }\n        } catch (error) {\n          console.log(`Error getting club detail for ID ${clubId}:`, error);\n        }\n      }\n\n      setClubDetails(clubDetailsArray);\n    };\n\n    if (clubs.length > 0) {\n      fetchClubDetails();\n    }\n  }, [clubs]);\n\n  const [clubEvents, setClubEvents] = useState([]);\n\n  useEffect(() => {\n    const fetchClubEvents = async () => {\n      const eventsCollection = firebase.firestore().collection(\"Events\");\n      let allEvents = [];\n\n      for (const clubId of clubs) {\n        try {\n          const clubEventsSnapshot = await eventsCollection\n            .doc(clubId)\n            .collection(\"ClubEvents\")\n            .get();\n\n          clubEventsSnapshot.forEach((eventDoc) => {\n            let eventData = eventDoc.data();\n            eventData.id = eventDoc.id; // 문서 ID를 저장하면 나중에 유용할 수 있습니다.\n            allEvents.push(eventData);\n          });\n        } catch (error) {\n          console.log(`Error getting events for club ID ${clubId}:`, error);\n        }\n      }\n\n      setClubEvents(allEvents);\n    };\n\n    if (clubs.length > 0) {\n      fetchClubEvents();\n    }\n  }, [clubs]);\n\n  function truncateString(str, num) {\n    if (str.length <= num) {\n      return str;\n    }\n    return str.slice(0, num) + \"...\";\n  }\n\n  return (\n    <div className=\"container-my-page\">\n      <div className=\"left-info-section\">\n        <div className=\"profileBox\">\n          <img src={currentUser.photoURL} alt=\"Profile\" />{\" \"}\n          {/* 프로필 사진 표시 */}\n        </div>\n        <div className=\"quicklinks\">\n          <div className=\"quickButton\">\n            <div className=\"quickText\">\n              <a\n                className=\"no-underline\"\n                href=\"https://docs.google.com/presentation/d/1Csovb_eIFyEeOnl7Bwid9tbmJ0H7Hq99DdmM2yjCFwo/edit?usp=sharing\"\n                role=\"button\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                General Club Officer Handbook\n              </a>\n            </div>\n            <div className=\"right-icon-section\">\n              <img\n                src=\"/img/caret-right-fill-blue.svg\"\n                className=\"arrow-icon\"\n              />\n            </div>\n          </div>\n\n          <div className=\"quickButton\">\n            <div className=\"quickText \">\n              <a\n                className=\"no-underline\"\n                href=\"https://docs.google.com/document/d/1SsspDl9OuRsLZxANOP7HirVBuO6vnIrFyHRtMg1DObw/edit?usp=sharing\"\n                role=\"button\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                FINANCE GUIDE\n              </a>\n            </div>\n            <div className=\"right-icon-section\">\n              <img\n                src=\"/img/caret-right-fill-blue.svg\"\n                className=\"arrow-icon\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"right-info-section\">\n        <div className=\"request-my-authority-section\">\n          <div className=\"welcomeBox\">Welcome {emailHandle}.</div>\n          <div className=\"authBox\">\n            <div className=\"authTitle\">\n              Get your authority. Select club name & position.\n            </div>\n            <div className=\"select-auth-section\">\n              <div className=\"select-box-section\">\n                {clubDetails.length > 0 ? (\n                  <select\n                    name=\"clubSelect\"\n                    id=\"club-select\"\n                    onChange={handleClubChange}\n                  >\n                    <option value=\"\" disabled selected>\n                      Select your club\n                    </option>\n                    {clubDetails.map((club) => (\n                      <option key={club.club_name} value={club.club_name}>\n                        {club.club_name}\n                      </option>\n                    ))}\n                  </select>\n                ) : (\n                  <p>You have not joined any clubs yet.</p>\n                )}\n\n                <select\n                  name=\"authNameSelect\"\n                  id=\"position-select\"\n                  onChange={handleAuthChange}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your position\n                  </option>\n                  <option value=\"president\">President</option>\n                  <option value=\"vice-president\">Vice President</option>\n                  <option value=\"sponsor\">Sponsor</option>\n                  <option value=\"officer\">Officer</option>\n                </select>\n              </div>\n\n              <div\n                className=\"submitButton\"\n                type=\"button\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"my-club-info-section\">\n          <div className=\"my-clubs-section\">\n            <div className=\"clubTitle\">My Clubs</div>\n            {isAdmin &&(<div type=\"button\" className=\"adminButton\">\n              \n                <Link to={`/admin`} className=\"no-underline\">\n                  Manage My Clubs\n                </Link>\n              \n            </div>)}\n            {clubDetails.length > 0 ? (\n              <div className=\"clubList\">\n                {clubDetails.map((club) => (\n                  <div key={club.club_name} className=\"eachClub\">\n                    <div className=\"clubNameTitle\">{club.club_name}</div>\n                    <div className=\"clubDesc\">\n                      Description: {club.description}{\" \"}\n                    </div>\n                    <p>\n                      <div className=\"clubDesc\">Hashtags: {club.hash_tag}</div>\n                    </p>\n                    <div type=\"button\" className=\"adminButton\">\n                      <Link\n                        to={`/clubDetail/${club.club_name}`}\n                        className=\"no-underline\"\n                      >\n                        Details\n                      </Link>\n                    </div>\n                    {/* <Link to={`/clubDetail/${club.club_name}`}><Button>detail</Button></Link> */}\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>You have not joined any clubs yet.</p>\n            )}\n          </div>\n\n          <div className=\"club-events-section\">\n            {/* upcoming Event 가져오기 */}\n            <div className=\"myEventText\">Club Events</div>\n            {clubEvents.length > 0 ? (\n              <table className=\"eventTable\">\n                <thead>\n                  <tr>\n                    <th>Event Name</th>\n                    <th>Time</th>\n                    <th>Location</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {clubEvents.map((event) => (\n                    <tr key={event.id}>\n                      <td>{event.event_name}</td>\n                      <td>\n                        <img\n                          src=\"/img/Icon_date.svg\"\n                          className=\"sub-info-icon\"\n                        />\n                        {event.end_date}\n                      </td>\n                      <td>\n                        <img\n                          src=\"/img/locationIcon.svg\"\n                          className=\"sub-info-icon\"\n                        />\n                        {event.location}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <p>No events available for the clubs you've joined.</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyPage;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"./announcement.css\";\n\nconst Announcement = () => {\n  const [announcementData, setAnnouncementData] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Announcements 컬렉션에서 모든 문서 가져오기\n    const fetchAnnouncements = async () => {\n      const firestore = firebase.firestore();\n      const announcementsCollection = firestore.collection(\"Announcements\");\n\n      try {\n        const snapshot = await announcementsCollection.get();\n        const announcementsData = snapshot.docs.map((doc) => doc.data());\n        setAnnouncementData(announcementsData);\n      } catch (error) {\n        console.log(\"Error fetching announcements:\", error);\n        setAnnouncementData([]);\n      }\n      setIsLoading(false);\n    };\n\n    fetchAnnouncements();\n  }, []);\n\n  const handleApplyClick = (applyLink) => {\n    window.open(applyLink, \"_blank\");\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n\n  return (\n    <div className=\"container-announcement-detail\">\n      {announcementData.map((announcement, index) => (\n        <div className=\"announcement-description-section\" key={index}>\n          <div className=\"announcement-first-header-section\">\n            <div className=\"hashtag-box-section\">\n            {announcement.hash_tag &&\n              announcement.hash_tag.split(\", \").map((tag, index) => (\n                <div key={index} className=\"hashtag-box\">\n                  {tag.trim()}\n                </div>\n              ))}\n            </div>\n            <div className=\"additional-info-section\">\n              <div className=\"announcement-holder-button\">\n              <a href=\"mailto:eaglecouncil@sas.edu.sg\" className=\"nav-item\">\n                {announcement.manager_name}\n              </a>\n              </div>\n              <div\n                className=\"announcement-apply-button\"\n                onClick={() => handleApplyClick(announcement.apply_link)}\n              >\n                apply\n              </div>\n            </div>\n          </div>\n          <div className=\"announcement-headline-section\">\n            {announcement.announcement_name}\n          </div>\n          <div className=\"announcement-sub-info-section\">\n            <img src=\"/img/Icon_date.svg\" className=\"sub-info-icon\" />\n            <div className=\"sub-info-datetime-text\">\n              {announcement.start_date}\n            </div>\n            <img src=\"/img/locationIcon.svg\" className=\"sub-info-icon\" />\n            <div className=\"sub-info-location-text\">\n              {announcement.location}\n            </div>\n          </div>\n          <div className=\"announcement-description-text-section\">\n            {announcement.announcement_description}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Announcement;\n","// App.js\n\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { AuthProvider } from './AuthProvider';\nimport PrivateRoute from './PrivateRoute';\nimport HomePage from './HomePage';\nimport LoginPage from './LoginPage';\nimport ClubDetail from './components/clubdetail/ClubDetail';\nimport EventDetail from './components/eventdetail/EventDetail';\nimport Navbar from './components/navbar/Navbar';  // 경로 확인 필요\nimport AdminPage from './AdminPage'\nimport MyPage from './components/mypage/MyPage';\nimport Announcement from './components/announcement/Announcement';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<PrivateRoute><HomePage /></PrivateRoute>} />\n          <Route path=\"/admin\" element={<PrivateRoute><AdminPage /></PrivateRoute>} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/clubdetail/:club_name\" element={<PrivateRoute><ClubDetail /></PrivateRoute>} />\n          <Route path=\"/eventdetail/:club_name/:event_name\" element={<PrivateRoute><EventDetail /></PrivateRoute>} />\n          <Route path=\"/mypage\" element={<PrivateRoute><MyPage /></PrivateRoute>} />\n          <Route path=\"/announcement\" element={<PrivateRoute><Announcement /></PrivateRoute>} />\n          \n          {/* <PrivateRoute path=\"/clubdetail\" element={<ClubDetail />} /> 보호된 경로 */}\n        </Routes>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}